@using com.Sconit.Entity.ORD
@using com.Sconit.Web.Models.SearchModels.INV
<script type="text/javascript">
    function DevanningHuGrid_OnDataBinding(e) {
        e.data = {
            HuId: $('#HuId').val()
        };
    }

    function onDevanning() {
        var grid = $("#DevanningHuGrid").data("tGrid");
        if (grid == null || grid == undefined) {
            $message.error('拆箱不能为空。');
            return;
        }

        var rows = grid.$tbody.children("tr:not(.t-no-data)").filter("tr:visible");

        var row = $(rows[0]);
        var devanningQty1 = row.find("#DevanningQty1").val();
        var devanningQty2 = row.find("#DevanningQty2").val();
        var devanningQty3 = row.find("#DevanningQty3").val();
        var devanningQty4 = row.find("#DevanningQty4").val();

     
        var huId = row.find("#Id").val();

        
        if (devanningQty1 == "" || devanningQty1 == "0") {
            $message.error('明细不能为空.');
            return;
        }
        var devanningQtyStr = devanningQty1;
      
        if (devanningQty2 != "" && devanningQty2 != "0") {
            devanningQtyStr += ","+ devanningQty2;
        }

        if (devanningQty3 != "" && devanningQty3 != "0") {
            devanningQtyStr += "," + devanningQty3;
        }

        if (devanningQty4 != "" && devanningQty4 != "0") {
            devanningQtyStr += "," + devanningQty4;
        }

        var data = {
            "HuidStr": huId,
            "DevanningqtyStr": devanningQtyStr
        }

        $.ajax({
            type: "post",
            dataType: "Json",
            data: data,
            async: false,
            url: "/Hu/DevanningHu/",
            cache: false,
            success: function (data, textStatus) {
                DisplayJsonMessages(data);

                if (data.Data.PrintUrl != "" && data.Data.PrintUrl != undefined) {

                    PrintOrder(data.Data.PrintUrl);
                }

            },

            error: function (XMLHttpRequest, textStatus, errorThrown) {

                var errorMessages = XMLHttpRequest.responseText;
                $message.error(errorMessages);
            }
        });
    }
</script>
<fieldset>
    @using (Html.BeginForm("Devanning", "Hu"))
    {   
        <div class="search">
            <div class="search-label">
                <label for="Hu_HuId">
                    @Resources.INV.Hu.Hu_HuId
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("HuId", TempData["HuSearchModel"] != null ? ((HuSearchModel)TempData["HuSearchModel"]).HuId : string.Empty)
            </div>
        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.SYS.Global.Button_Search</button>
            @Html.Button(Resources.SYS.Global.Button_Devanning, "Url_Inventory_Hu_Devanning", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnDevanning"},
        {"onclick","onDevanning()"},
        {"style","display:display"}
	})
        </div>
    }
</fieldset>
