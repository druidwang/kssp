@using com.Sconit.Web.Models.SearchModels.ORD
@using com.Sconit.Entity.SYS
<fieldset>
    @using (Html.BeginForm("BatchProcessList", "ProductionOrder"))
    {   
        <div class="search">
            <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.OrderMaster.OrderMaster_OrderNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("OrderNo", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).OrderNo : string.Empty)
            </div>
            <div class="search-label">
                <label for="OrderMaster_Flow">
                    @Resources.ORD.OrderMaster.OrderMaster_Flow_Production
                </label>
            </div>
            <div class="search-field">
                 @{
        Html.RenderAction("_FlowComboBox", "Common",
            new
            {
                controlName = "Flow",
                type = (int)com.Sconit.CodeMaster.OrderType.Production,
                selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Flow : string.Empty
            });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_PartyFrom">
                  @Resources.ORD.OrderMaster.OrderMaster_PartyFrom_Production
                </label>
            </div>
            <div class="search-field">
               @{
        Html.RenderAction("_OrderMasterPartyFromComboBox", "Common",
                        new
                        {
                            controlName = "PartyFrom",
                            orderType = (int)com.Sconit.CodeMaster.OrderType.Production,
                            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).PartyFrom : string.Empty
                        });
                }
            </div>
             <div class="search-label">
                <label for="OrderMaster_Pirority">
                    @Resources.ORD.OrderMaster.OrderMaster_Priority
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_CodeMasterDropDownList", "Common", new
        {
            code = com.Sconit.CodeMaster.CodeMaster.OrderPriority,
            controlName = "Priority",
            includeBlankOption = true,
            blankOptionDescription = CodeDetail.SpecialValueEnum.BlankValue,
            blankOptionValue = "",
            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Priority : null
        });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_CreateUserName">
                    @Resources.ORD.OrderMaster.OrderMaster_CreateUserName
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("CreateUserName", TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).CreateUserName : string.Empty)
            </div>
            <div class="search-label">
                <label for="OrderMaster_Status">
                    @Resources.ORD.OrderMaster.OrderMaster_Status
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_CodeMasterDropDownList", "Common", new
        {
            code = com.Sconit.CodeMaster.CodeMaster.OrderStatus,
            controlName = "Status",
            includeBlankOption = true,
            blankOptionDescription = CodeDetail.SpecialValueEnum.BlankValue,
            blankOptionValue = "",
            selectedValue = TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).Status : null
        });
                }
            </div>
           

            <div class="search-label">
                <label for="OrderMaster_DateFrom">
                    @Resources.ORD.OrderMaster.OrderMaster_DateFrom
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DatePicker().Name("DateFrom")
         .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateFrom : System.DateTime.Today.AddDays(-7))
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                    @Resources.ORD.OrderMaster.OrderMaster_DateTo
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DatePicker().Name("DateTo")
             .Value(TempData["OrderMasterSearchModel"] != null ? ((OrderMasterSearchModel)TempData["OrderMasterSearchModel"]).DateTo : System.DateTime.Today.AddDays(1))
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.SYS.Global.Button_Search</button>
     @Html.Button(Resources.SYS.Global.Button_Delete, "Url_OrderMstr_Production_Delete", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnDelete"},
        {"needconfirm","true"},
        {"style","display: none"},
        {"onclick","deleteCheckedOrders()"}
	})
        @Html.Button(Resources.SYS.Global.Button_Submit, "Url_OrderMstr_Production_Submit", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnSubmit"},
        {"needconfirm","true"},
        {"style","display: none"},
        {"onclick","submitCheckedOrders()"}
	})
       @Html.Button(Resources.SYS.Global.Button_Cancel, "Url_OrderMstr_Production_Cancel", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnCancel"},
        {"needconfirm","true"},
        {"style","display: none"},
        {"onclick","cancelCheckedOrders()"}
	})
                @Html.Button(Resources.SYS.Global.Button_Close, "Url_OrderMstr_Production_Close", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnClose"},
        {"needconfirm","true"},
        {"style","display: none"},
        {"onclick","closeCheckedOrders()"}
	})
            <button type="button" id="btnPrint" onclick="printCheckedOrders()" style="display: none">
                @Resources.SYS.Global.Button_Print</button>
            <button type="button" id="btnExport" onclick="exportCheckedOrders()" style="display: none">
                @Resources.SYS.Global.Button_Export</button>
        </div>

    }
    <script type="text/javascript">
        function submitCheckedOrders() {
            batchProcessOrders("/ProductionOrder/BatchSubmit/");
        }

        function deleteCheckedOrders() {
            batchProcessOrders("/ProductionOrder/BatchDelete/");
        }

        function cancelCheckedOrders() {
            batchProcessOrders("/ProductionOrder/BatchCancel/");
        }

        function closeCheckedOrders() {
            batchProcessOrders("/ProductionOrder/BatchClose/");
        }

        function printCheckedOrders() {
            batchProcessOrders("/ProductionOrder/BatchPrint/");
        }

        function exportCheckedOrders() {
            batchProcessOrders("/ProductionOrder/BatchProcess/");
        }

        function batchProcessOrders(urlName) {
            var $checkRecords = $("input[name='checkedRecords']");
            var orderStr = "";
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    var orderNo = $checkRecords[i].value;
                    if (orderStr == "") {
                        orderStr = orderNo;
                    } else {
                        orderStr += "," + orderNo;
                    }
                }
            }
            var data = {
                "orderStr": orderStr
            };
            $.ajax({
                type: "post",
                dataType: "html",
                url: urlName,
                data: data,
                cache: false,
                success: function (data, textStatus) {
                    var $tGrid = $("#content");
                    $($tGrid).html(data);
                }
            });
        }
    </script>
</fieldset>
