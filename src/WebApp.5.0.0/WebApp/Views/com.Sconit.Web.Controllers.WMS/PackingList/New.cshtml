@using com.Sconit.Entity.WMS;
@model IEnumerable<com.Sconit.Entity.WMS.BufferInventory>
<script type="text/javascript">
    $(function () {
        $("#HuId").keydown(function () {
            if (event.keyCode == 13) {
                var data = {
                    "huId": $(this).val(),
                    "packingListHu": $("#packingListHu").val(),
                    "flow": $("#flow").val()
                }
                $(this).val("");
                $.ajax({
                    type: "post",
                    dataType: "json",
                    data: data,
                    url: "/PackingList/HuIdScan/",
                    cache: false,
                    success: function (data, textStatus) {
                        var huData = {
                            "PackingListHu": data.PackingListHu,
                            "Flow": data.Flow
                        }
                        $.ajax({
                            type: "get",
                            dataType: "html",
                            data: huData,
                            url: "/PackingList/New/",
                            cache: false,
                            success: function (data, textStatus) {
                                var $tGrid = $("#content");
                                $($tGrid).html(data);
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {

                                var errorMessages = XMLHttpRequest.responseText;
                                $message.error(errorMessages);
                            }
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        var errorMessages = XMLHttpRequest.responseText;
                        $message.error(errorMessages);

                    }
                });
            }
        });

    });

    function CreatePackingList() {
        var packingListHu = $("#packingListHu").val();
        if (packingListHu == null || packingListHu == "") {
            $message.error('装箱明细不能为空。');
            return;
        }

        var data = {
            "packingListHu": packingListHu,
            "flow":$("#flow").val()
        }
        $.ajax({
            type: "post",
            dataType: "html",
            data: data,
            async: false,
            url: "/PackingList/CreatePackingList/",
            cache: false,
            success: function (data, textStatus) {
                if (data != "") {
                    DisplayTextMessages(data);
                    $.ajax({
                        type: "post",
                            dataType: "html",
                            url: "@Url.Content("~/PackingList/New/")",
                            data: "",
                            cache: false,
                            success: function (data, textStatus) {
                                var $tGrid = $("#content");
                                $($tGrid).html(data);
                            }
                      });
             }
            },

            error: function (XMLHttpRequest, textStatus, errorThrown) {
                var errorMessages = XMLHttpRequest.responseText;
                $message.error(errorMessages);
            }
        });
    }

    function doClick(v) {
        $("#huType").val(v);
    }
</script>
<fieldset>
    <legend>@Resources.WMS.PackingList.PackingList_Edit_Title</legend>
    <div class="editor">
        <div class="editor-label-2">
            条码:
        </div>
        <div>
            @Html.TextBox("HuId")
        </div>
      </div>
        <div class="search-footer">
            @Html.Button(Resources.SYS.Global.Button_Create, "Url_PackingList_New", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnNew"},
        {"onclick","CreatePackingList()"}
	})
        </div>
</fieldset>
<fieldset>
    <legend>装箱条码</legend>
    @(Html.Telerik().Grid(Model)
        .Name("RepackInHu")
        .DataKeys(keys =>
        {
            keys.Add(p => p.HuId);
        })
        .DataBinding(dataBinding =>
            dataBinding.Ajax()
                            .Select("_SelectPackingListHu", "PackingList", new { packingListHu = ViewBag.packingListHu })
        )
        .Columns(columns =>
        {
            columns.Bound(o => o.HuId);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.UnitCount);
            columns.Bound(o => o.Location);
            columns.Bound(o => o.Dock);
            columns.Bound(o => o.Qty);
        })

        .Scrollable(c => c.Enabled(false))
        .Footer(false)
    )

      @Html.Hidden("packingListHu", (String)ViewBag.packingListHu)
      @Html.Hidden("flow", (String)ViewBag.flow)
</fieldset>
