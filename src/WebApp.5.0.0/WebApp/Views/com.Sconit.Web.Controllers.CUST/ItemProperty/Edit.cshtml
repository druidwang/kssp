@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.CUST.ItemProperty
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "CUST_ItemProperty_View" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.CUST.ItemProperty.ItemProperty_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CreateUserName)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.CreateUserId)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.RmItem)
            </div>
            <div class="editor-field-2">
                      @{
        Html.RenderAction("_ItemComboBox", "Common",
            new
            {
                controlName = "RmItem",
                selectedValue = Model.RmItem
            });
                    
                }
                  @Html.ValidationMessageFor(model => model.RmItem)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Viscosity)
            </div>
            <div class="editor-field-2">
                  @{
                Html.RenderAction("_CodeMasterDropDownList", "Common", new
                {
                    code = com.Sconit.CodeMaster.CodeMaster.Viscosity,
                    includeBlankOption = true,
                    controlName = "Viscosity",
                    selectedValue = Model != null ? (int)Model.Viscosity : 0
                });
                }
                 @Html.ValidationMessageFor(model => model.Viscosity)
            </div>
              <div class="editor-label-2">
                @Html.LabelFor(model => model.SfgItem)
            </div>
            <div class="editor-field-2">
                      @{
                Html.RenderAction("_ItemComboBox", "Common",
                    new
                    {
                        controlName = "SfgItem",
                        selectedValue = Model.SfgItem
                    });
                    
                }
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.Flow)
            </div>
            <div class="editor-field-2">
                          @{
        Html.RenderAction("_FlowComboBox", "Common",
            new
            {
                controlName = "Flow",
                type = (int)com.Sconit.CodeMaster.OrderType.Production,
                selectedValue =Model.Flow
            });
                }
            </div>
             
        </div>
        <div class="editor-footer">
            <button type="submit" id="btnSave">
                @Resources.SYS.Global.Button_Save</button>
            
            @Html.Button(Resources.SYS.Global.Button_Delete, "CUST_ItemProperty_View", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnDelete"},
                {"needconfirm","true"},
                {"onclick","location.href='"+@Url.Content("~/ItemProperty/Delete/?id="+@Model.Id)+"'"}
            })
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/ItemProperty/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
