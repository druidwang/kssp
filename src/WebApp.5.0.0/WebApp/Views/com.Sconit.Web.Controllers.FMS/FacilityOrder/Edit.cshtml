@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.FMS.FacilityOrderMaster
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.FMS.FacilityOrderMaster.FacilityOrderMaster_Title_View</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.FacilityOrderNo)
                @Html.HiddenFor(model => model.FacilityOrderNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.FacilityOrderNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common", new
    {
        code = com.Sconit.CodeMaster.CodeMaster.FacilityOrderStatus,
        controlName = "Status",
        blankOptionDescription = CodeDetail.SpecialValueEnum.BlankValue,
        blankOptionValue = "",
        enable = false,
        selectedValue = Model != null ? ((int)Model.Status).ToString() : null
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateUserName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CreateUserName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CreateDate)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LastModifyDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.LastModifyDate)
            </div>
            <div class="editor-label-2">
                <label>
                    @Resources.ACC.User.User_User
                </label>
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.LastModifyUserName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ReferenceNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ReferenceNo)
            </div>
        </div>
        <div class="editor-footer">
         @{
             
    if (Model.Status == com.Sconit.CodeMaster.FacilityOrderStatus.Submit)
    {
         @Html.Button("保养开始", "Url_FacilityOrder_Edit", new Dictionary<string, string>()
	            {
	                {"type", "button"},
                  
	                {"id", "btnStart"},
                    {"needconfirm","true"},
                    {"onclick","location.href='"+Url.Content("~/FacilityOrder/Start/" + Model.FacilityOrderNo) +"'"}
	            })
    }

    if (Model.Status == com.Sconit.CodeMaster.FacilityOrderStatus.InProcess)
    {
            @Html.Button("保养完成", "Url_FacilityOrder_Edit", new Dictionary<string, string>()
	    {
	        {"type", "button"},
	        {"id", "btnFinish"},
            {"needconfirm","true"},
            {"onclick","onFinishFacilityOrder()"}
	    })
    }
}
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/FacilityOrder/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
@{
    Html.RenderAction("_FacilityOrderDetailList", "FacilityOrder", new { facilityOrderNo = Model.FacilityOrderNo });
}
<script type="text/javascript">
    function onFinishFacilityOrder() {

        var facilityOrderNo = $("#FacilityOrderNo").val();
        var grid = $("#FacilityOrderDetail").data("tGrid");
        var rows = grid.$tbody.children("tr:not(.t-no-data)").filter("tr:visible");
        var idStr = "";
        var qtyStr = "";
        var noteStr = "";

        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            var id = row.find("#Id").val();
            var qty = row.find("#ActualQty").val();
            var note = row.find("#Note").val();
            if (!isNaN(qty)) {
                if (idStr == "") {
                    idStr = id;
                    qtyStr = qty;
                    noteStr = note;
                } else {
                    idStr += "," + id;
                    qtyStr += "," + qty;
                    noteStr += "," + note;
                }
            }

        }
        var data = {
            "facilityOrderNo": facilityOrderNo,
            "idStr": idStr,
            "qtyStr": qtyStr,
            "noteStr": noteStr
        }
        $.ajax({
            type: "post",
            dataType: "Json",
            data: data,
            url: "/FacilityOrder/FinishFacilityOrder/",
            cache: false,
            success: function (data, textStatus) {
                var successMessage = data.SuccessMessage;
                if (data != "") {
                    $.ajax({
                        type: "get",
                        dataType: "html",
                        data: data,
                        url: "/FacilityOrder/Index/",
                        cache: false,
                        success: function (data, textStatus) {
                            var $tGrid = $("#content");
                            $($tGrid).html(data);
                            $message.success('' + successMessage + '');
                        }
                    });
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                var errorMessages = XMLHttpRequest.responseText;

                $message.error(errorMessages);
            }
        });
    }
</script>
