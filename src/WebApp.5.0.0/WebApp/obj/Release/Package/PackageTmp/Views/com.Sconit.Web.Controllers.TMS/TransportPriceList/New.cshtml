@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.TMS.TransportPriceList
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_TransportPriceList_View" });
}

@using (Html.BeginForm("New", "TransportPriceList"))
{
  <fieldset>
        <legend>@Resources.BIL.PriceListMaster.PriceListMaster_New_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field-2">
                @Html.TextBoxFor(model => model.Description)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Carrier)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CarrierComboBox", "Common", new
                    {
                        controlName = "Carrier"
                    });
                }
                @Html.ValidationMessageFor(model => model.Carrier)
            </div>
            <div class="editor-label-2">
                 @Html.LabelFor(model => model.CarrierName)
            </div>
            <div class="editor-field-2">
                @Html.TextBoxFor(model => model.CarrierName, new { @readonly="true"})
                @Html.HiddenFor(model => model.CarrierName)
            </div>
                   <div class="editor-label-2">
                 @Html.LabelFor(model => model.TransportMode)
            </div>
            <div class="editor-field-2">
            @{
                Html.RenderAction("_CodeMasterDropDownList", "Common", new
                {
                    code = com.Sconit.CodeMaster.CodeMaster.TransportMode,
                    controlName = "Type"
                });
            }
            </div>

            <div  class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsActive", true)
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_New, "Url_TransportPriceList_Edit", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnNew"},
        {"needconfirm","true"}
	})
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/TransportPriceList/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}