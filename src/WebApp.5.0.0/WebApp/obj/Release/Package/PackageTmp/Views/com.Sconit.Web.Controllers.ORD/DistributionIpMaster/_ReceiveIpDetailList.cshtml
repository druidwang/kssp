@model IEnumerable<com.Sconit.Entity.ORD.IpDetail>
<fieldset>
    <legend>@Resources.ORD.IpDetail.IpDetail_Title</legend>
    @(Html.Telerik().Grid(Model)
        .Name("IpDetail")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.IpNo);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ReferenceItemCode);
            columns.Bound(o => o.Id)
                .ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='<#= Id #>'  onClick='showButtons()'   />")
                .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
                .Width(36).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.UnitCount).Format("{0:0.###}");
            columns.Bound(o => o.Qty).Format("{0:0.###}");
            columns.Bound(o => o.ReceivedQty).Format("{0:0.###}");
            columns.Bound(o => o.CurrentReceiveQty).ClientTemplate("<input type='text' id='CurrentReceiveQty' name='CurrentReceiveQty' style='width:70px' value='<#= Qty-ReceivedQty #>'/>").Format("{0:0.###}");;
        })
                 .CellAction(cell =>
                 {
                     if (cell.Column.Member == "Id")
                     {
                         cell.Text = string.Format("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='" + cell.DataItem.Id + "'  onClick='showButtons()' />");
                     }
                     if (cell.Column.Member == "CurrentReceiveQty")
                     {
                         cell.Text = string.Format("<input type='text' id='CurrentReceiveQty' name='CurrentReceiveQty' style='width:70px' value='" + Convert.ToDouble(cell.DataItem.Qty-cell.DataItem.ReceivedQty) + "'/>");
                     }
                 })
        .Scrollable(c => c.Enabled(false))
        .Sortable()
                .Resizable(resizing => resizing.Columns(true))
        .Footer(false)
    )
  
</fieldset>

<script>
    $(function () {
        $("#btnReceive").attr("style", "display:none");
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            var $checkRecords = $("input[name='checkedRecords']");
            var showButton = false;
            for (var i = 0; i < $checkRecords.length; i++) {
                if ($checkRecords[i].checked) {
                    showButton = true;
                    break;
                }
            }
            $("#btnReceive").attr("style", showButton ? "display:inline" : "display:none");
        });
    });



    function showButtons() {
        var $checkRecords = $("input[name='checkedRecords']");
        var showButton = false;
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                showButton = true;
                break;
            }
        }
        $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
        $("#btnReceive").attr("style", showButton ? "display:inline" : "display:none");
    }
</script>
