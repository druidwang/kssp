@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.MRP.MD.ProductType
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_ProductType_View" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.MRP.ProductType.ProductType_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.Code)
            @Html.HiddenFor(model => model.CreateUserName)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.LastModifyUserName)
            @Html.HiddenFor(model => model.LastModifyDate)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Code)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="search-label">
                <label for="OrderMaster_Type">
                    @Resources.ORD.OrderMaster.OrderMaster_Type
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new
                    {
                        code = com.Sconit.CodeMaster.CodeMaster.ScheduleType,
                        controlName = "SubType",
                        blankOptionDescription = CodeDetail.SpecialValueEnum.BlankValue,
                        blankOptionValue = "",
                        selectedValue = (int)Model.SubType
                    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.IsActive)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.NeedFreeze)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.NeedFreeze)
            </div>            
            <div class="editor-label-2">
                @Html.LabelFor(model => model.NeedTurn)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.NeedTurn)
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_Save, "Url_ProductType_Edit", new Dictionary<string, string>()
	        {
	            {"type", "submit"},
	            {"id", "btnSave"}
	        })
            @Html.Button(Resources.SYS.Global.Button_Delete, "Url_ProductType_Delete", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnDelete"},
                {"needconfirm","true"},
                {"onclick","location.href='"+@Url.Content("~/MrpProductType/Delete/"+@Model.Code)+"'"}
            })
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/MrpProductType/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
