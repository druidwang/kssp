@using com.Sconit.Entity.WMS;
@model IEnumerable<com.Sconit.Entity.WMS.ShipPlan>
           
<script type="text/javascript">
    $(function () {
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            $("#btnNew").attr("style", this.checked ? "display:inline" : "display:none");
        });
    });

    function showButtons() {
        var $checkRecords = $("input[name='checkedRecords']");
        var showButton = false;
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                showButton = true;
                break;
            }
        }
        $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
        $("#btnNew").attr("style", showButton ? "display:inline" : "display:none");
    }

    function onDataBound() {
        $("tr.t-no-data td").html("@Resources.GridLocalization.NoRecords");
    }
</script>
<fieldset>
    <legend>@Resources.ORD.OrderDetail.OrderDetail_Title</legend>
    @(Html.Telerik().Grid(Model)
                .Name("ShipPlan")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
     
        .DataBinding(dataBinding =>
            dataBinding.Ajax()
            .Select("_SelectBatchEditing", "PickTask", new { flow = ViewBag.flow, orderNo = ViewBag.orderNo })
        )
        .Columns(columns =>
        {
            columns.Bound(o => o.OrderNo)
              .ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='<#= Id #>' onClick='showButtons()'  />")
              .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
              .Width(36).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.Flow);
            columns.Bound(o => o.PartyFromName);
            columns.Bound(o => o.PartyToName);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.UnitCount);
            columns.Bound(o => o.UnitCountDescription);
            columns.Bound(o => o.StartTime);
            columns.Bound(o => o.WindowTime);
            columns.Bound(o => o.DiaplayOrderQty);
            columns.Bound(o => o.DiaplayPickQty);         
        })
        .ClientEvents(c => c.OnDataBound("onDataBound"))
        .NoRecordsTemplate("Loading...")
        .Scrollable(c => c.Enabled(false))
        .Footer(false)
    )
</fieldset>
