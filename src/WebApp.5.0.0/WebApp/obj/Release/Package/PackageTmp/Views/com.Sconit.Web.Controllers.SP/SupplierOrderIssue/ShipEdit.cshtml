@model com.Sconit.Entity.ORD.IpMaster
<script type="text/javascript">
    function onShip() {
        var checkedOrders = $("#CheckedOrders").val();
        var grid = $("#OrderDetail").data("tGrid");
        var rows = grid.$tbody.children("tr:not(.t-no-data)").filter("tr:visible");
        var idStr = "";
        var qtyStr = "";

        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            var id = row.find("#Id").val();
           
            var qty = row.find("#CurrentShipQty").val();
            if (qty != "" && !isNaN(qty) && parseFloat(qty) > 0) {
                if (idStr == "") {
                    idStr = id;
                    qtyStr = qty;
                } else {
                    idStr += "," + id;
                    qtyStr += "," + qty;
                }
            }
        }
        var data = {
            "idStr": idStr,
            "qtyStr": qtyStr,
            "CheckedOrders": checkedOrders
        }
        $.ajax({
            type: "post",
            dataType: "Json",
            data: data,
            url: "/SupplierOrderIssue/ShipOrder/",
            cache: false,
            success: function (data, textStatus) {
                
                if (data != "") {
                    $.ajax({
                        type: "post",
                        dataType: "html",
                        data: { IpNo: data.Data.IpNo },
                        url: "/SupplierIpMaster/_Edit/",
                        cache: false,
                        success: function (data, textStatus) {
//                            $message.success(data.SuccessMessage);
//                           
                            var $tGrid = $("#content");
                            $($tGrid).html(data);
                        }
                    });
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                var errorMessages = XMLHttpRequest.responseText;
                $message.error(errorMessages);
            }
        });
    }
</script>
@using (Html.BeginForm())
{

    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Supplier_Lading_Deliver" });

    <fieldset>
        <legend>@Resources.ORD.OrderMaster.OrderMaster_BaseInfo</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PartyFrom)
              @Html.Hidden("CheckedOrders", (string)ViewBag.CheckOrders)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.PartyFrom)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PartyTo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.PartyTo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PartyFromName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.PartyFromName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PartyToName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.PartyToName)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipFromAddress)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_AddressComboBox", "Common",
        new
        {
            controlName = "ShipFrom",
            type = (int)com.Sconit.CodeMaster.AddressType.ShipAddress,
            selectedValue = Model.ShipFrom,
            enable = false
            
        });
                }
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipToAddress)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_AddressComboBox", "Common",
        new
        {
            controlName = "ShipTo",
            type = (int)com.Sconit.CodeMaster.AddressType.ShipAddress,
            selectedValue = Model.ShipTo,
            enable = false
        });
                }
            </div>

             <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipFromContact)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipFromContact)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipToContact)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipToContact)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipFromTel)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipFromTel)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipToTel)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipFromTel)
            </div>
              <div class="editor-label-2">
                @Html.LabelFor(model => model.Dock)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Dock)
            </div>

        </div>
    </fieldset>

    <div class="editor-footer">

             @Html.Button(Resources.SYS.Global.Button_Ship, "Url_Supplier_Lading_Deliver", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnShip"},
                    {"needconfirm","true"},
                    {"onclick","onShip()"}
	            })
        @*<button type="button" id="btnShip" onclick="onShip()">
            @Resources.SYS.Global.Button_Confirm</button>*@
        <button type="button" id="btnBack" onclick="location.href='@Url.Content("/SupplierOrderIssue/Ship")'">
            @Resources.SYS.Global.Button_Back</button>
    </div>
}
<div id="divShpOrderDetail">
    @{
        Html.RenderAction("_ShipOrderDetailList", "SupplierOrderIssue");
    }
</div>
