@using com.Sconit.Web.Models.SearchModels.INV
@model com.Sconit.Entity.INV.ItemExchange
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Inventory_ItemExchange" });
}

<script type="text/javascript">
    function Item_Change() {
        var combobox = $(this).data("tComboBox");
        if (combobox == undefined) {
            return;
        }
        if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
            combobox.value("");
            combobox.reload();
        } else {
            var uomData = {
                item: $("#ItemFrom").val()
            };
            $.ajax({
                type: "get",
                dataType: "html",
                url: "/ItemExchange/_GetUomOfItem/",
                data: uomData,
                cache: false,
                success: function (data) {
                    document.getElementById("UomFrom").value = data;
                }
            });
            var uomData = {
                item: $("#ItemTo").val()
            };
            $.ajax({
                type: "get",
                dataType: "html",
                url: "/ItemExchange/_GetUomOfItem/",
                data: uomData,
                cache: false,
                success: function (data) {
                    document.getElementById("UomTo").value = data;
                }
            });
        }
    }

    function PartyFrom_Change(e) {
        if (e.value != "") {
            var combobox = $(this).data("tComboBox");
            if (combobox == undefined) {
                return;
            }
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
            } 
                //$('#LocationFrom').data('tComboBox').value('');
                //$('#LocationFrom').data('tComboBox').text('');
                //$("#LocationFrom").data("tComboBox").reload();
            
        }
    }
    function LocationFrom_DataBinding(e) {
        e.data = {
            region: $('#PartyFrom').val()
        };
    }
    function PartyTo_Change(e) {
        if (e.value != "") {
            var combobox = $(this).data("tComboBox");
            if (combobox == undefined) {
                return;
            }
            if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
                combobox.value("");
                combobox.reload();
               
            } 
                //$('#LocationTo').data('tComboBox').value('');
                //$('#LocationTo').data('tComboBox').text('');
                //$("#LocationTo").data("tComboBox").reload();
            
        }
    }

    function LocationTo_DataBinding(e) {
        e.data = {
            region: $('#PartyTo').val()
        };
    }

</script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.INV.ItemExchange.ItemExchange_New_Title</legend>
        <div class="editor">
             <div class="editor-label-2">
             <label>
                    @Resources.INV.ItemExchange.ItemExchange_ItemFrom
             </label>
            </div>
            <div class="search-field">
               @{
                 Html.RenderAction("_ItemComboBox", "Common", new
                           {
                               controlName = "ItemFrom",
                               coupled = true,
                               selectedValue = Model != null ? Model.ItemFrom : null
                           });
                }
                @Html.ValidationMessageFor(model => model.ItemFrom)
            </div>
            <div class="editor-label-2">
                <label>
                    @Resources.EXT.PageLan.ItemUom
                </label>
            </div>
            <div class="editor-field-2" id="UomFromDiv">
                @Html.TextBox("UomFrom", Model != null ? (Model.UomFrom ?? string.Empty) : string.Empty, new { disabled = "disabled" })
            </div>
            <div class="editor-label-2">
                <label>
                        @Resources.INV.ItemExchange.ItemExchange_ItemTo
                </label>
            </div>
            <div class="search-field">

                  @{
                    Html.RenderAction("_ItemComboBox", "Common", new
                           {
                               controlName = "ItemTo",
                               coupled = true,
                               selectedValue = Model != null ? Model.ItemTo : null
                           });
                    }
                    @Html.ValidationMessageFor(model => model.ItemTo)
            </div>
            <div class="editor-label-2">
                <label>
                    @Resources.EXT.PageLan.NewItemUom
                </label>
            </div>
            <div class="editor-field-2" id="UomToDiv">
                @Html.TextBox("UomTo", Model != null ? (Model.UomTo ?? string.Empty) : string.Empty, new { disabled = "disabled" })
            </div>
             @*<div class="editor-label-2">
                     <label>
                     @Resources.INP.InspectMaster.InspectMaster_Region
                     </label>
            </div>
            <div class="search-field">
                 @{
                    Html.RenderAction("_RegionComboBox", "Common", new
                           {
                               isChange = true,
                               ControlId = "PartyFrom",
                               controlName = "RegionFrom",
                               selectedValue = Model != null ? Model.RegionFrom : null
                           });
                  }           
                @Html.ValidationMessageFor(model => model.RegionFrom)
            </div>*@

              @*<div class="editor-label-2">
              <label>
                    @Resources.INV.ItemExchange.ItemExchange_RegionTo
                    </label>
            </div>
            <div class="search-field">
             @{
                Html.RenderAction("_RegionComboBox", "Common", new
                           {
                               isChange = true,
                               ControlId = "PartyTo",
                               controlName = "RegionTo",
                               selectedValue = Model != null ? Model.RegionTo : null
                           });
                }  
                @Html.ValidationMessageFor(model => model.RegionTo)          
                </div>*@
            <div class="editor-label-2">
                <label>
                   @Resources.INV.Hu.Hu_LocationTo
                </label>
            </div>
            <div class="search-field">
                @{
                Html.RenderAction("_LocationComboBox", "Common", new
                    {
                        checkRegion = true,
                        controlName = "LocationFrom",
                        selectedValue = Model != null ? Model.LocationFrom : null
                    });
                }          
                @Html.ValidationMessageFor(model => model.LocationFrom)
            </div>

              @*<div class="editor-label-2">
              <label>
                   @Resources.INV.ItemExchange.ItemExchange_LocationTo
                   </label>
            </div>
            <div class="search-field">
             @{
                Html.RenderAction("_LocationComboBox", "Common", new
                               {
                               checkRegion = true,
                               controlName = "LocationTo",
                               selectedValue = Model != null ? Model.LocationTo : null
                           });
                }    
                @Html.ValidationMessageFor(model => model.LocationTo)        
                </div>*@
            @*<div class="editor-label-2">
                @Html.LabelFor(model => model.Uom)
            </div>
            <div class="editor-field-2">
               @{
               Html.RenderAction("_UomDropDownList", "Common",
               new
               {
                   controlName = "UomFrom",
                   includeBlankOption = false,
                   selectedValue = Model != null ? Model.Uom : string.Empty
               });
                    }
            @Html.ValidationMessageFor(model => model.Uom)
            </div>*@
            <div class="editor-label-2">
                <label>
                @Resources.MD.Container.Container_Qty
                </label>
            </div>
            <div class="editor-field-2">
               @Html.TextBox("Qty",Model!=null?Model.Qty.ToString():string.Empty)
               @Html.ValidationMessageFor(model => model.Qty)
            </div>
             @*<div class="editor-label-2">
                @Html.LabelFor(model => model.NewQty)
            </div>
            <div class="editor-field-2">
               @Html.TextBox("NewQty", Model != null ? Model.NewQty.ToString() : string.Empty)
               @Html.ValidationMessageFor(model => model.NewQty)
            </div>*@
            @*<div class="editor-label-2">
                @Html.LabelFor(model => model.QualityType)
            </div>*@
            @*<div class="editor-field-2">
                @{
 
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new
                    {
                        code = com.Sconit.CodeMaster.CodeMaster.QualityType,
                        controlName = "QualityType",
                        selectedValue =  Model != null ? ((int)Model.QualityType).ToString() : null,
                        visible = false
                    });    
                }   
            </div>*@
         <div class="editor-label-2">
                @Html.LabelFor(model => model.EffectiveDate)
            </div>
            <div class="editor-field-2">         
            @(Html.Telerik().DatePicker().Name("EffectiveDate") 
            .Min(DateTime.Now.AddDays(-30)).Max(DateTime.Now)
            .Value(DateTime.Today)
            .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px"}))
               @Html.ValidationMessageFor(model => model.EffectiveDate)
            </div>
        </div>
        <div class="editor-footer">
            <button type="button" id="btnNew">
                @Resources.SYS.Global.Button_New</button>
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/ItemExchange/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
<script type="text/javascript">
    $('#btnNew').click(function () {
        if ($('#UomFrom').val() != $('#UomTo').val()) {
            $message.error('原物料单位和替换物料单位不一致.');
            return;
        }
        if ($('#ItemFrom').val() == $('#ItemTo').val()) {
            $message.error('原物料和替换物料不能相同.');
            return;
        }
        $('form').submit();
    });
</script>