@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.ACC.User
@{
    ViewBag.Title = Resources.ACC.User.User_New_Title;
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_User_View" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.ACC.User.User_New_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field-2">
                @{
           Html.RenderAction("_CodeMasterDropDownList", "Common", new
           {
               code = com.Sconit.CodeMaster.CodeMaster.UserType,
               controlName = "Type",
               selectedValue =Model!=null?  Model.Type:0
           });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.FirstName)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LastName)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Depart)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Depart)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Position)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Position)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.NewPassword)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.NewPassword)
                @Html.ValidationMessageFor(model => model.NewPassword)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ConfirmPassword)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.ConfirmPassword)
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.TelPhone)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.TelPhone)
                @Html.ValidationMessageFor(model => model.TelPhone)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.MobilePhone)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.MobilePhone)
                @Html.ValidationMessageFor(model => model.MobilePhone)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Language)
            </div>
            <div class="editor-field-2">
                @{
           Html.RenderAction("_CodeMasterDropDownList", "Common", new
           {
               code = com.Sconit.CodeMaster.CodeMaster.Language,
               controlName = "Language"
           });
                }
                @Html.ValidationMessageFor(model => model.Language)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsActive", true)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.AccountExpired)
            </div>
            <div class="editor-field-2">
                @(Html.Telerik().DateTimePicker().Name("AccountExpired").Value("2100-01-01 00:00"))
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.DomainUser)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.DomainUser)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PasswordExpired)
            </div>
            <div class="editor-field-2">
                @(Html.Telerik().DateTimePicker().Name("PasswordExpired").Value("2100-01-01 00:00"))
            </div>
            <div class="editor-footer">
                <button type="submit" id="btnNew">
                    @Resources.SYS.Global.Button_New</button>
                <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/User/List")'">
                    @Resources.SYS.Global.Button_Back</button>
            </div>
    </fieldset>
}