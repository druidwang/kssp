@using com.Sconit.Entity.MRP.MD
@model com.Sconit.Entity.MRP.TRANS.SnapProdLineEx
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Mrp_MrpSnap_ProdLineExAdjust" });
}
<script type="text/javascript">
    function CodeMaster_Change(e) {
        if (e.value == 4) {
            document.getElementById("DateindexlabelTo").style.display = 'inline';
            document.getElementById("DateindexfieldTo").style.display = 'inline';
            document.getElementById("Dateindexlabel").style.display = 'none';
            document.getElementById("Dateindexfield").style.display = 'none';
        }
        else {
            document.getElementById("DateindexlabelTo").style.display = 'none';
            document.getElementById("DateindexfieldTo").style.display = 'none';
            document.getElementById("Dateindexlabel").style.display = 'inline';
            document.getElementById("Dateindexfield").style.display = 'inline';
            $('#DateIndex').data('tComboBox').value('');
            $('#DateIndex').data('tComboBox').text('');
            $("#DateIndex").data("tComboBox").reload();
        }

    }

    function DateIndex_DataBinding(e) {
        if ($('#DateType').val() != 4) {
            e.data = {
                dateType: $('#DateType').val()
            }
        }
    }

</script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.MRP.ProdLineExInstance.ProdLineExInstance_New_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ProductLine)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_FlowComboBox", "Common",
        new
        {
            controlName = "ProductLine",
            resourceGroup = 20,
            type = (int)com.Sconit.CodeMaster.OrderType.Production,
            selectedValue = Model != null ? Model.ProductLine : string.Empty
        });
                }
                @Html.ValidationMessageFor(model => model.ProductLine)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Item)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ItemComboBox", "Common", new
    {
        controlName = "Item",
        selectedValue = Model != null ? Model.Item : string.Empty
    });
                }
                @Html.ValidationMessageFor(model => model.Item)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.DateType)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterComboBox", "Common", new
        {
            code = com.Sconit.CodeMaster.CodeMaster.TimeUnit,
            isRccpPlan = true,
            includeBlankOption = true,
            isChange = true,
            controlName = "DateType",
            selectedValue = Model != null ? (int)Model.DateType : -1
        });
                }
                @Html.ValidationMessageFor(model => model.DateType)
            </div>
        <div class="search-label">
             @Html.LabelFor(model => model.SnapTime)
        </div>
        <div class="search-field">
            @{
                Html.RenderAction("_MrpSnapMasterComboBox", "Common", new
                    {
                        controlName = "SnapTime",
                        includeBlankOption = true,
                        isRelease = true,
                        SnapType = com.Sconit.CodeMaster.SnapType.Rccp,
                        selectedValue = Model==null ? DateTime.Now: Model.SnapTime 
                    });
            }
        </div>
            <div class="editor-label-2" id="Dateindexlabel">
                @Html.LabelFor(model => model.DateIndex)
            </div>
            <div class="editor-field-2" id="Dateindexfield">
                @{
    Html.RenderAction("_DateIndexComboBox", "Common", new
        {
            includeBlankOption = true,
            controlName = "DateIndex",
            selectedValue = Model != null ? Model.DateIndex : string.Empty
        });
                }
                @Html.ValidationMessageFor(model => model.DateIndex)
            </div>
            <div class="editor-label-2" id="DateindexlabelTo" style="display: none">
                @Html.LabelFor(model => model.DateIndex)
            </div>
            <div class="editor-field-2" id="DateindexfieldTo" style="display: none">
                @(Html.Telerik().DatePicker().Name("DateIndexDate")
                        .Value(Model != null ? Model.DateIndexDate : DateTime.Today)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
                @Html.ValidationMessageFor(model => model.DateIndexDate)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ShiftType)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common", new
    {
        code = com.Sconit.CodeMaster.CodeMaster.ShiftType,
        includeBlankOption = true,
        controlName = "ShiftType",
        selectedValue = Model != null ? (int)Model.ShiftType : -1
    });
                }
                @Html.ValidationMessageFor(model => model.ShiftType)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ApsPriority)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common", new
    {
        code = com.Sconit.CodeMaster.CodeMaster.ApsPriorityType,
        includeBlankOption = true,
        controlName = "ApsPriority",
        selectedValue = Model != null ? (int)Model.ApsPriority : -1
    });
                }
                @Html.ValidationMessageFor(model => model.ApsPriority)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.MrpSpeed)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.MrpSpeed).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.MrpSpeed)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.RccpSpeed)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.RccpSpeed).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.RccpSpeed)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.SwitchTime)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.SwitchTime).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.SwitchTime)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.SpeedTimes)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.SpeedTimes).DecimalDigits(0).MinValue(0)
                @Html.ValidationMessageFor(model => model.SpeedTimes)
            </div>
            @*<div class="editor-label-2">
                @Html.LabelFor(model => model.ScrapPercent)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.ScrapPercent).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.ScrapPercent)
            </div>*@
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Quota)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.Quota).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.Quota)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.MinLotSize)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.MinLotSize).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.MinLotSize)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.MaxLotSize)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.MaxLotSize).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.MaxLotSize)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.EconomicLotSize)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.EconomicLotSize).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.EconomicLotSize)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.TurnQty)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.TurnQty).DecimalDigits(0).MinValue(0)
                @Html.ValidationMessageFor(model => model.TurnQty)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Correction)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.Correction).DecimalDigits(2).MinValue(0)
                @Html.ValidationMessageFor(model => model.Correction)
            </div>
        </div>
        <div class="editor-footer">
            <button type="submit" id="btnNew">
                @Resources.SYS.Global.Button_New</button>
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/MrpSnapProdLineEx/InstanceList")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}