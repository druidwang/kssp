@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.CUST.ItemEx
@using (Html.BeginForm("ItemExEdit", "Item"))
{  
    <fieldset>
        <legend>@Resources.CUST.ItemEx.ItemEx_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.Code)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Customer)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Customer)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemType1)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ItemCategoryDropDownList", "Common", new
    {
        controlName = "ItemType1",
        selectedValue = Model.ItemType1,
        includeBlankOption = true,
        Level = 1,
        enable = true
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemType2)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ItemCategoryDropDownList", "Common", new
    {
        controlName = "ItemType2",
        selectedValue = Model.ItemType2,
        includeBlankOption = true,
        Level = 2,
        enable = true
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemType3)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ItemCategoryDropDownList", "Common", new
    {
        controlName = "ItemType3",
        selectedValue = Model.ItemType3,
        includeBlankOption = true,
        Level = 3,
        enable = true
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemType4)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ItemCategoryDropDownList", "Common", new
    {
        controlName = "ItemType4",
        selectedValue = Model.ItemType4,
        includeBlankOption = true,
        Level = 4,
        enable = true
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.AgeingTime)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.AgeingTime) 小时
                @Html.ValidationMessageFor(model => model.AgeingTime)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.AgeingMethod)
            </div>
            <div class="editor-field-2">
                @Html.TextBoxFor(model => model.AgeingMethod)
                @Html.ValidationMessageFor(model => model.AgeingMethod)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Package)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Package)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Section)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ItemSectionComboBox", "Common", new
        {
            controlName = "Section",
            selectedValue = Model != null ? Model.Section : string.Empty
        });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PartLength)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.PartLength)
                @Html.ValidationMessageFor(model => model.PartLength)
                @Html.Label("PartLengthUom", "M(米)")
            </div>
            <div class="editor-label-2">
            </div>
            <div class="editor-field-2">
                @*  @{
                    Html.RenderAction("_UomDropDownList", "Common",
                        new
                        {
                            controlName = "PartLengthUom",
                            includeBlankOption=true,
                            selectedValue = Model != null ? Model.PartLengthUom : string.Empty
                        });
                }
                @Html.ValidationMessageFor(model => model.PartLengthUom)*@
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_Save, "Url_Item_Edit", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnSave"},
        {"needconfirm","true"}
	})
            @if (!ViewBag.IsNull)
            {
                @Html.Button(Resources.SYS.Global.Button_Delete, "Url_Item_Delete", new Dictionary<string, string>()
        {
	        {"type", "button"},
	        {"id", "btnDelete"},
            {"needconfirm","true"},
            {"onclick","location.href='"+@Url.Content("~/Item/ItemExDelete/"+@Model.Code)+"'"}
        })
            }
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/Item/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
<script type="text/javascript">

    //    $(document).ready(function () {
    //        $("#TabStrip .t-item:eq(0)").click(function () {
    //            window.location.reload(true);
    //        });
    //    });

    //    $(document).ready(function () {
    //        $("form[action$='ItemExEdit']").submit(function () {
    //            $.post($(this).attr("action"), $(this).serialize(), function (response) {
    //                var tabStrip = $("#TabStrip");
    //                var tabStripContent0 = tabStrip.data("tTabStrip").getContentElement(0);
    //                $(tabStripContent0).html(response);
    //            });
    //            return false;
    //        });
    //    });
</script>
