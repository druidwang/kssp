@model com.Sconit.Entity.ORD.ReceiptMaster
@using com.Sconit.Web.Models.SearchModels.ORD
@{
    ViewBag.Title = "Edit";
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_ProcurementReceipt_View" });
}
@using (Html.BeginForm())
{  
   
    
    <div id="divMore">
     <fieldset>
        <legend>@Resources.ORD.OrderMaster.OrderMaster_BaseInfo</legend>
        <div class="search">
            <div class="search-label">
                <label for="ReceiptMaster_ReceiptNo">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_ReceiptNo
                </label>
            </div>
            <div class="search-field">
                @Html.DisplayFor(model => model.ReceiptNo)
                @Html.HiddenFor(model => model.ReceiptNo)
            </div>
            <div class="search-label">
                <label for="ReceiptMaster_IpNo">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_IpNo
                </label>
            </div>
            <div class="search-field">
                @Html.DisplayFor(model => model.IpNo)
            </div>
            <div class="editor-label-2">
                <label for="ReceiptMaster_PartyFrom">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_PartyFromName
                </label>
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.PartyFromName)
            </div>
            <div class="editor-label-2">
                <label for="ReceiptMaster_PartyFrom">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_PartyToName
                </label>
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.PartyToName)
            </div>
            <div class="search-label">
                <label for="ReceiptMaster_StartDate">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_ShipFrom
                </label>
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_AddressComboBox", "Common",
        new
        {
            controlName = "ShipFrom",
            type = (int)com.Sconit.CodeMaster.AddressType.ShipAddress,
            selectedValue = Model.ShipFrom,

            enable = false
        });
                }
            </div>
            <div class="search-label">
                <label for="ReceiptMaster_StartDate">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_ShipToAddress
                </label>
            </div>
            <div class="search-field">
                @{
    Html.RenderAction("_AddressComboBox", "Common",
       new
       {
           controlName = "ShipTo",
           type = (int)com.Sconit.CodeMaster.AddressType.ShipAddress,
           selectedValue = Model.ShipTo,
           enable = false
       });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipFromContact)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipFromContact)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipToContact)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipToContact)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipFromTel)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipFromTel)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ShipToTel)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ShipFromTel)
            </div>
            <div class="search-label">
                <label for="ReceiptMaster_Dock">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_Dock
                </label>
            </div>
            <div class="search-field">
                @Html.DisplayFor(model => model.Dock)
            </div>
        </div>
    </fieldset>
        <fieldset>
            <legend>@Resources.ORD.OrderMaster.OrderMaster_Audit</legend>
            <div class="editor">
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.CreateUserName)
                </div>
                <div class="editor-field-2">
                    @Html.DisplayFor(model => model.CreateUserName)
                </div>
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.CreateDate)
                </div>
                <div class="editor-field-2">
                    @Html.DisplayFor(model => model.CreateDate)
                </div>
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.LastModifyUserName)
                </div>
                <div class="editor-field-2">
                    @Html.DisplayFor(model => model.LastModifyUserName)
                </div>
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.LastModifyDate)
                </div>
                <div class="editor-field-2">
                    @Html.DisplayFor(model => model.LastModifyDate)
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>@Resources.ORD.OrderMaster.OrderMaster_BarCodeOption</legend>
            <div class="editor">
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.IsReceiveScanHu)
                </div>
                <div class="editor-field-2">
                    @{
  
                        @Html.CheckBoxFor(model => model.IsReceiveScanHu, new { disabled = true })
 
                    }
                </div>
            </div>
        </fieldset>
        @*<fieldset>
            <legend>@Resources.ORD.OrderMaster.OrderMaster_PrintOption</legend>
            <div class="editor">
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.IsPrintReceipt)
                </div>
                <div class="editor-field-2">
                    @{
   
                        @Html.CheckBoxFor(model => model.IsPrintReceipt, new { disabled = true })

                    }
                </div>
                <div class="editor-label-2">
                    @Html.LabelFor(model => model.ReceiptTemplate)
                </div>
                <div class="editor-field-2">
                    @{
    Html.RenderAction("_CodeMasterDropDownList", "Common",
        new { code = com.Sconit.CodeMaster.CodeMaster.ReceiptTemplate, controlName = "ReceiptTemplate", selectedValue = Model.ReceiptTemplate, enable = false });
                    }
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>@Resources.ORD.OrderMaster.OrderMaster_OrderControl</legend>
            <div class="editor">
                <div class="editor-label-3">
                    <label>
                        @Resources.ORD.ReceiptMaster.ReceiptMaster_IsCheckPartyFromAuthority_Procurement
                    </label>
                </div>
                <div class="editor-field-3">
                    @{
                        @Html.CheckBoxFor(model => model.IsCheckPartyFromAuthority, new { disabled = true })
                    }
                </div>
                <div class="editor-label-3">
                    @Html.LabelFor(model => model.IsCheckPartyToAuthority)
                </div>
                <div class="editor-field-3">
                    @{
                        @Html.CheckBoxFor(model => model.IsCheckPartyToAuthority, new { disabled = true })
                    }
                </div>
            </div>
        </fieldset>*@
    </div>
    
    <div>
        <a type="text/html" onclick="More()" href="#" id="more">Hide...</a>
    </div>


    <div class="search-footer">
        @{
    if (Model.Status == com.Sconit.CodeMaster.ReceiptStatus.Close && Model.Type == com.Sconit.CodeMaster.IpDetailType.Normal)
    {
@*<button type="button" id="btnCancel" onclick="location.href='@Url.Content("~/ProcurementReceipt/Cancel/" + @Model.ReceiptNo)'">
                @Resources.SYS.Global.Button_Cancel</button>*@
            @Html.Button(Resources.SYS.Global.Button_Cancel, "Url_OrderMstr_Procurement_Cancel", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnCancel"},
        {"needconfirm","true"},
        {"onclick","location.href='"+Url.Content("~/ProcurementReceipt/Cancel/" + Model.ReceiptNo) +"'"}
	})
    }
        }
        <button type="button" id="btnPrint" onclick="Print()">
            @Resources.SYS.Global.Button_Print</button>
        <button type="button" id="btnExport" onclick="Export()">
            @Resources.SYS.Global.Button_Export</button>
        <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/ProcurementReceipt/List")'">
            @Resources.SYS.Global.Button_Back</button>
    </div>

}
@{
    Html.RenderAction("_ReceiptDetailList", "ProcurementReceipt", new { receiptNo = Model.ReceiptNo });
}
<form id="hiddenForm" action="/ProcurementReceipt/SaveToClient" target="_blank"
method="post">
<input id="receiptNo" name="receiptNo" type="hidden" />
</form>
<script type="text/javascript" language="javascript">
//    function Export(e) {
//        window.open("/ProcurementReceipt/SaveToClient/?receiptNo=" + $("#ReceiptNo").val());
//    }
    function Export(e) {
        $("#receiptNo").val($("#ReceiptNo").val());
        $("#hiddenForm").submit();
    }

    function Print(e) {
        var data = {
            "receiptNo": $("#ReceiptNo").val()
        };
        $.ajax({
            type: "post",
            dataType: "text",
            url: "/ProcurementReceipt/Print/",
            data: data,
            success: function (data, textStatus) {
                if (data != "") {
                    PrintOrder(data);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                var errorMessages = XMLHttpRequest.responseText;
                $message.error(errorMessages);
            }
        });
    }



//    function More(va) {
//        if (va.innerHTML == "More...") {
//            document.getElementById("divMore").style.display = 'inline'
//            document.getElementById("more").innerHTML = "Hide...";
//        }
//        else {
//            document.getElementById("divMore").style.display = 'none'
//            document.getElementById("more").innerHTML = "More...";
//        }
//    }
</script>
