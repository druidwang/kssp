@model IEnumerable<com.Sconit.Entity.INV.ProductBarCode>
<script type="text/javascript">
    $(function () {
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            $("#btnRepack").attr("style", this.checked ? "display:inline" : "display:none");
        });
    });

    function showButtons() {
        var $checkRecords = $("input[name='checkedRecords']");
        var showButton = false;
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                showButton = true;
                break;
            }
        }
        $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
        $("#btnRepack").attr("style", showButton ? "display:inline" : "display:none");
    }
</script>
<fieldset>
    <legend>@Resources.ORD.OrderMaster.OrderMaster_Receive_Title</legend>
    @(
       
 Html.Telerik().Grid(Model)
          .Name("ProductBarCodeGrid")
          .DataKeys(keys =>
          {
              keys.Add(p => p.OrderNo);
          })
          .Columns(columns =>
          {
              columns.Bound(o => o.Code)
              .ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='<#= Code #>' onClick='showButtons()'  />")
              .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
              .Width(36).HtmlAttributes(new { style = "text-align:center" });
              columns.Bound(o => o.Code);
              columns.Bound(o => o.Item);
              columns.Bound(o => o.ItemDescription);
              columns.Bound(o => o.Uom);
              columns.Bound(o => o.Qty);
          
          })

          .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxRepackProductBarCodeList", "Hu"))
                          .ClientEvents(events => events.OnDataBinding("ProductBarCodeGrid_OnDataBinding"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(ViewBag.PageSize);
        })
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )
</fieldset>
