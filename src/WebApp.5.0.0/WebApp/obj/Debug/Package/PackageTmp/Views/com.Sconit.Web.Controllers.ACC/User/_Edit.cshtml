@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.ACC.User
@Html.Partial("_AjaxMessage")
<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        $("form[action$='_Edit']").submit(function () {
            $.post($(this).attr("action"), $(this).serialize(), function (response) {
                var tabStrip = $("#TabStrip");
                var tabStripContent0 = tabStrip.data("tTabStrip").getContentElement(0);
                $(tabStripContent0).html(response);
            });
            return false;
        });
    });
</script>

<form action="/User/_Edit" method="post">
    <fieldset>
        <legend>@Resources.ACC.User.User_Edit_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Code)
                @Html.HiddenFor(model => model.Password)
                @Html.HiddenFor(model => model.NewPassword)
                @Html.HiddenFor(model => model.ConfirmPassword)
                @Html.HiddenFor(model => model.CreateUserName)
                @Html.HiddenFor(model => model.CreateDate)
                @Html.HiddenFor(model => model.LastModifyUserName)
                @Html.HiddenFor(model => model.LastModifyDate)
                @Html.HiddenFor(model => model.LastAccessDate)
                @Html.HiddenFor(model => model.IpAddress)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field-2">
                 @{
        Html.RenderAction("_CodeMasterDropDownList", "Common", new
        {
            code = com.Sconit.CodeMaster.CodeMaster.UserType,
            controlName = "Type",
            selectedValue =(int)Model.Type
        });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.FirstName)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LastName)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Depart)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Depart)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Position)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Position)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.TelPhone)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.TelPhone)
                @Html.ValidationMessageFor(model => model.TelPhone)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.MobilePhone)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.MobilePhone)
                @Html.ValidationMessageFor(model => model.MobilePhone)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Language)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new
                    {
                        code = com.Sconit.CodeMaster.CodeMaster.Language,
                        controlName = "Language",
                        selectedValue = Model.Language,
                    });
                }
                @Html.ValidationMessageFor(model => model.Language)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.IsActive)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.AccountExpired)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.AccountExpired)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.DomainUser)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.DomainUser)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PasswordExpired)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.PasswordExpired)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateUserName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CreateUserName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.CreateDate)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LastModifyUserName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.LastModifyUserName)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LastModifyDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.LastModifyDate)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.LastAccessDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.LastAccessDate)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IpAddress)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.IpAddress)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.LastPasswordModifyDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.LastPasswordModifyDate)
            </div>
        </div>
        <div class="editor-footer">
            <button type="submit" id="btnSave">
                @Resources.SYS.Global.Button_Save</button>
            <button type="button" id="btnDelete" onclick="location.href='@Url.Content("~/User/Delete/" + @Model.Id)'">
                @Resources.SYS.Global.Button_Delete</button>
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/User/List")'">
                @Resources.SYS.Global.Button_Back</button>
            <button type="button" id="btnChangePassword" onclick="ChangePassword_Click()">@Resources.SYS.Global.Button_ChangePassword</button>
        </div>
    </fieldset>
</form>
@*@{ Html.Telerik().Window()
        .Name("Window")
        .Title(Resources.ACC.User.User_ChangePassword_Title)
        .Draggable(true)
        .Scrollable(false)
        .Resizable()
        .Width(600)
        .Height(200)
        .Modal(true)
        .Visible(false)
        .Render();
}
*@

<script language="javascript" type="text/javascript">
    function ChangePassword_Click() {
        var data = {
            "Id": $("#Id").val()
        };
        $.ajax({
            type: "get",
            dataType: "html",
            url: "/User/_ChangePassword/",
            data: data,
            cache: false,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent0 = tabStrip.data("tTabStrip").getContentElement(0);
                $(tabStripContent0).html(data);
            }
        });
    }
</script>
