@model com.Sconit.Entity.ISI.TaskStatus 
@Html.Partial("_AjaxMessage")
<script type="text/javascript">
   
</script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.ISI.TaskStatus.TaskStatus_BasicInfo</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.TaskCode)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.TaskCode)
                @Html.HiddenFor(model => model.TaskCode)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.TaskSubType)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_TaskSubTypeComboBox", "Common", new
    {
        controlName = "TaskSubType",
        enable = false,
        selectedValue = Model.TaskSubType,
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Priority)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common", new
    {
        code = com.Sconit.CodeMaster.CodeMaster.TaskPriority,
        controlName = "Priority",
        enable = false,
        selectedValue = Model.Priority,
    });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.StatusDescription)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.StatusDescription)
            </div>
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field-2">
            @Html.DisplayFor(model => model.Subject)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.TaskAddress)
        </div>
        <div class="editor-field-2">
            @{
    Html.RenderAction("_TaskAddressComboBox", "Common", new
    {
        controlName = "TaskAddress",
        enable = false,
        selectedValue = Model.TaskAddress,
    });
            }
        </div>
        <div class="editor-label-1">
            @Html.LabelFor(model => model.Description1)
        </div>
        <div class="editor-field-1">
            @Html.DisplayFor(model => model.Description1)
        </div>
    </fieldset>
    <fieldset>
        <legend>@Resources.ISI.TaskStatus.TaskStatus_TaskStatus</legend>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.StartDate)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.EndDate)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.EndDate)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.IsRemindCreateUser)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.IsRemindCreateUser)
        </div>
         <div class="editor-label-2">
            @Html.LabelFor(model => model.IsRemindAssignUser)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.IsRemindAssignUser)
        </div>
         <div class="editor-label-2">
            @Html.LabelFor(model => model.IsRemindStartUser)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.IsRemindStartUser)
        </div>
           <div class="editor-label-2">
            @Html.LabelFor(model => model.IsRemindCommentUser)
        </div>
        <div class="editor-field-2">
            @Html.EditorFor(model => model.IsRemindCommentUser)
        </div>
        <div class="editor-label-1">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field-1">
            @Html.TextAreaFor(model => model.Description, new { rows = 3, style = "min-height:0;width:80%" })
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_New, "Url_Customer_Edit", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnNew_TaskStatus"},
                {"needconfirm","true"},
                {"onclick","btnNew_TaskStatus_Click()"}
	        })
            <button type="button" id="btnBack_TaskStatus" onclick="btnBack_TaskStatus_Click()">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
<script language="javascript" type="text/javascript">
    function btnBack_TaskStatus_Click() {
        var data = {
            "TaskCode": $("#TaskCode").val()
        };
        $.ajax({
            type: "get",
            dataType: "html",
            url: "@Url.Content("~/TaskMaster/_TaskStatusList/")",
            data: data,
            cache: false,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent1 = tabStrip.data("tTabStrip").getContentElement(1);
                $(tabStripContent1).html(data);
            }
        });
    }

    function btnNew_TaskStatus_Click() {
        var data = {
            "StartDate": $("#StartDate").val(),
            "EndDate": $("#EndDate").val(),
            "Description": $("#Description").val(),
            "TaskCode":$("#TaskCode").val(),
            "IsRemindCreateUser":$("#IsRemindCreateUser").val(),
            "IsRemindAssignUser":$("#IsRemindAssignUser").val(),
            "IsRemindStartUser":$("#IsRemindStartUser").val(),
            "IsRemindCommentUser":$("#IsRemindCommentUser").val(),
        };
        $.ajax({
            type: "post",
            dataType: "html",
            url: "@Url.Content("~/TaskMaster/_TaskStatusNew/")",
            data: data,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent1 = tabStrip.data("tTabStrip").getContentElement(1);
                $(tabStripContent1).html(data);
            }
        });
    }

</script>
