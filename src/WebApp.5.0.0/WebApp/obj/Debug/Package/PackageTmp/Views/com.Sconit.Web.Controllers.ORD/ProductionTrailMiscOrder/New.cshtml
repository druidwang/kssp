@model com.Sconit.Entity.ORD.MiscOrderMaster
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_ProductionTrailMiscOrder_New" });
}
<script type="text/javascript">
    function onCreate() {
        function len(s) {
            var l = 0;
            var a = s.split("");
            for (var i = 0; i < a.length; i++) {
                if (a[i].charCodeAt(0) < 299) {
                    l++;
                } else {
                    l += 2;
                }
            }
            return l;
        }
        function check(e)  
        {  
             var te= /^[1-9]+[0-9]*]*$/;
             if (!te.test(e)) 
            {  
                return false;
            }
            return true;
        }

        //debugger
        var grid = $("#MiscOrderDetailGrid").data("tGrid");
        if (grid == null) {
            $message.error('明细不能为空。');
            return;
        }

        //if ($("#EffectiveDate").val() == "") {
        //    $message.error('生效日期为必填项。');
        //    return;
        //}

        if ($("#Flow").val() == "") {
            $message.error('路线为必填项。');
            return;
        }

        if ($("#MoveType").val() == "") {
            $message.error('移动类型为必填项。');
            return;
        }
        
        if (($("#MoveType").val() == "581" || $("#MoveType").val() == "582") && (isNaN($("#WBS").val()) || len($("#WBS").val()) != 7)) {
            $message.error('网络号为必填项,且长度为7的数字。');
            return;
        }
        if (($("#MoveType").val() == "581" || $("#MoveType").val() == "582") && (isNaN($("#WBSRow").val()) || len($("#WBSRow").val()) != 4)) {
            $message.error('网络行为必填项,且长度为4的数字');
            return;
        }
        if ($("#MoveType").val() == "581" || $("#MoveType").val() == "582") {
            if ($("#WBSRow").val() != "" && !check($("#WBSRow").val().replace("0", "").replace("0", "").replace("0", ""))) {
                $message.error('网络行号必须为正整数');
                return;
            }
            if ($("#WBS").val() != "" && !check($("#WBS").val().replace("0", "").replace("0", "").replace("0", ""))) {
                $message.error('网络行号必须为正整数');
                return;
            }
        }
        if ($("#MoveType").val() == "281" || $("#MoveType").val() == "282")
        {
            if (($("#Note").val() == "" && $("#WorkHour").val() != "") || ($("#Note").val() != "" && $("#WorkHour").val() == ""))
            {
                $message.error('SAP订单号和工时只能同时有值或同时为空。');
                return;
            }
            if ( $("#Note").val() != "" &&  !check($("#Note").val()))
            {
                $message.error('SAP订单号必须为正整数');
                return;   
            }
            if ($("#Note").val() != "" && len($("#Note").val()) != 7)
            {
                $message.error('SAP订单长度必须为7.');
                return;   
            }
            if ( $("#WorkHour").val() != "" &&  isNaN($("#WorkHour").val()))
            {
                $message.error('工时必须为数字。');
                return;   
            }
        }
 
        var miscmstr = {
            "MoveType": $("#MoveType").val(),
            //"Location": $("#Location").val(),
            "Note": $("#Note").val(),
            "WorkHour": $("#WorkHour").val(),
            "EffectiveDate": $("#EffectiveDate").val(),
            "WBS": ($("#WBS").val() + "/" + $("#WBSRow").val()),
            "Flow": $("#Flow").val()
        }

        var reserveLines = new Array();
        var reserveNos = new Array();
        var sequences = new Array();
        var items = new Array();
        var workHours = new Array();
        var qtys = new Array();

        var rows = grid.$tbody.children("tr:not(.t-no-data)").filter("tr:visible");
        var i = 0;
        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
            var row = $(rows[rowIndex]);
            if ($("#MoveType").val() == "281" || $("#MoveType").val() == "282") {
                if ($.trim(row[0].childNodes[1].innerText) != "") {
                    sequences[i] = $.trim(row[0].childNodes[0].innerText);
                    reserveNos[i] = $.trim(row[0].childNodes[1].innerText);
                    reserveLines[i] = $.trim(row[0].childNodes[2].innerText);
                    items[i] = $.trim(row[0].childNodes[3].innerText);
                    qtys[i] = $.trim(row[0].childNodes[7].innerText);
                    if (len(reserveNos[i]) <3) {
                        $message.error('预留号长度必须大于3');
                        return;
                    }
                    i++;
                }
            }
            else {
                if ($.trim(row[0].childNodes[1].innerText) != "") {
                    sequences[i] = $.trim(row[0].childNodes[0].innerText);
                    items[i] = $.trim(row[0].childNodes[1].innerText);
                    //workHours[i] = $.trim(row[0].childNodes[5].innerText);
                    qtys[i] = $.trim(row[0].childNodes[5].innerText);
                    i++;
                }
            }
        }
        var made = {
            "reserveNos": reserveNos,
            "reserveLines": reserveLines,
            "sequences": sequences,
            "items": items,
            "workHours": workHours,
            "qtys": qtys
        }

        $.ajax({
            type: "post",
            dataType: "text",
            url: "/ProductionTrailMiscOrder/CreateMiscOrder/",
            data: $.extend(made, miscmstr),
            cache: false,
            traditional: true,
            success: function (data) {
                $("#content").html(data);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }

    function MoveType_Change(e) {
        if (e.value == "581" || e.value == "582") {
            $("#divWBS").show();
        }
        else {
            $("#divWBS").hide();
        }
        //divSAPOrderNO
        if (e.value == "281" || e.value == "282") {
            $("#divSAPOrderNO").show();
        }
        else {
            $("#divSAPOrderNO").hide();
        }
        var data = { miscOrderNo: "", "moveType": e.value };
        $.ajax({
            type: "get",
            dataType: "html",
            url: "/ProductionTrailMiscOrder/_MiscOrderDetail/",
            data: data,
            cache: false,
            success: function (data, textStatus) {
                $("#fdOrderDetail").html(data);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
        Flow_Change(e);
    }

    function Flow_Change(e) {
        var combobox = $("#Flow").data("tComboBox");
        if (combobox == undefined) {
            return;
        }
        if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
            combobox.value("");
            combobox.reload();
        } else {
            var data = {
                "flow": $("#Flow").val(),
                "moveType": $("#MoveType").val()
            };
            $.ajax({
                type: "get",
                dataType: "text",
                url: "/ProductionTrailMiscOrder/_GetMiscOrderLocation/",
                data: data,
                cache: false,
                success: function (data, textStatus) {
                    document.getElementById("miscOrderLocation").innerHTML = "<label>" + data + "</label>";
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        }
    }
</script>
<fieldset>
    <legend>@Resources.ORD.IpMaster.IpMaster_BaseInfo</legend>
    <div class="editor">
        <div class="editor-label-2">
            @Html.LabelFor(model => model.MoveType)
        </div>
        <div class="search-field">
            @{
                Html.RenderAction("_MoveTypeDropDownList", "Common", new
                    {
                        SubType = (int)com.Sconit.CodeMaster.MiscOrderSubType.SY03,
                        isChange = true,
                        controlName = "MoveType",
                        selectedValue = Model != null && Model.MoveType != null ? Model.MoveType : string.Empty
                    });
            }
            @Html.ValidationMessageFor(model => model.MoveType)
        </div>
        <div class="editor-label-2">
            @*@Html.LabelFor(model => model.EffectiveDate)*@
        </div>
        <div class="editor-field-2">
            @(Html.Telerik().DateTimePicker().Format("yyyy-MM-dd HH:mm").Name("EffectiveDate").Value(DateTime.Now)
             .Min(DateTime.Now.AddDays(-30)).Max(DateTime.Now)
             .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px;visibility:hidden" }))
            @Html.ValidationMessageFor(model => model.EffectiveDate)
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Flow)
        </div>
        <div class="editor-field-2">
            @{
                Html.RenderAction("_FlowComboBox", "Common", new
                {
                    controlName = "Flow",
                    isChange = true,
                    type = (int)com.Sconit.CodeMaster.OrderType.Production,
                    selectedValue = Model != null ? Model.Flow : null,
                });
            }
        </div>
        <div class="editor-label-2">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="search-field" id="miscOrderLocation">
        </div>
        <div id="divWBS" style="display: none">
            <div class="editor-label-2">
                <label>@Resources.SI.SAPPPMES.SAPPPMES_NPLNR</label>
            </div>
            <div class="editor-field-2">
                <input name="WBS"  id="WBS" value="@ViewBag.WBS"/>
            </div>
            <div class="editor-label-2">
                <label>@Resources.SI.SAPPPMES.SAPPPMES_VORNR</label>
            </div>
            <div class="editor-field-2">
                <input name="WBSRow"  id="WBSRow" value="@ViewBag.WBSRow"/>
            </div>
        </div>
        <div id="divSAPOrderNO" style="display: inline">
            <div class="editor-label-2">
                <label>@Resources.ORD.OrderBomDetail.OrderBomDetail_AUFNR</label>
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Note)
            </div>
            <div class="editor-label-2">
               <label> @Resources.MD.Item.Item_WorkHour</label>
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.WorkHour)
            </div>
        </div>

        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_New, "Url_ProductionTrailMiscOrder_New", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnNew"},
                {"needconfirm","true"},
                {"onclick","onCreate()"}
	        })
        </div>
    </div>
</fieldset>
<div id="fdOrderDetail">
    @{
        Html.RenderAction("_MiscOrderDetail", "ProductionTrailMiscOrder", new { miscOrderNo = string.Empty, moveType = 281 });
    }
</div>
