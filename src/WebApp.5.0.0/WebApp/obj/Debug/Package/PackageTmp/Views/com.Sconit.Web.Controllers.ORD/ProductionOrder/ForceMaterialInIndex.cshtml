@{
    ViewBag.Title = Resources.ORD.OrderMaster.OrderMaster_OrderNo;
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Production_MaterialIn_ForceFeedOrderMaster" });
}
@model com.Sconit.Entity.ORD.OrderMaster
<script type="text/javascript">
    function onOrderChange() {
        if ($("#OrderNo").val() == "") {
            $message.error("请输入工单号");
            return;
        }
        var data = {
            "OrderNo": $("#OrderNo").val(),
            "referenceOrderNo": $("#ReferenceOrderNo").val()
        };

        $.ajax({
            type: "get",
            dataType: "html",
            url: "/ProductionOrder/_ForceFeedQtyDetailList/",
            data: data,
            cache: false,
            success: function (data, textStatus) {
                $("#divForceFeedQtyDeatil").html(data);
                $("#divForceFeedQtyDeatil").show();
                $("#btnMaterialIn").show();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }

    function QueryOrderListView() {
        var data = {
            "OrderNo": $('#OrderNo').val(),
            "DateFrom": $('#DateFrom').val(),
            "DateTo": $('#DateTo').val()
        };
        $("#divForceFeedQtyDeatil").hide();
        $("#btnMaterialIn").hide();
        $("#divOrderList").show();
        $("#divOrderList").html("Loading...");
        $.ajax({
            type: "get",
            dataType: "text",
            url: "/ProductionOrder/_SearchResult/",
            cache: false,
            data: data,
            success: function (data, textStatus) {
                $("#divOrderList").html(data);
            }
        });
    }

    function onSubmit(e) {
        var grid = $("#OrderBomDetail").data("tGrid");
        var inserted = grid.changeLog.inserted;
        var updated = $.grep(grid.changeLog.updated, function (value) { return value != undefined });
        var deleted = $.grep(grid.changeLog.deleted, function (value) { return value != undefined });

        var orderBomDetails = grid.changeLog.serialize(inserted, updated, deleted);
        var orderMaster = {
            "OrderNo": $("#OrderNo_1").val(),
            "referenceOrderNo": $("#ReferenceOrderNo_1").val()
        }
        grid._convert(orderBomDetails);
        $.ajax({
            type: "post",
            dataType: "Json",
            url: "/ProductionOrder/ForceFeedQty/",
            data: $.extend(orderBomDetails, orderMaster),
            success: function (data) {
                $message.success(data.SuccessMessage);
                $("#OrderNo").text("");
                $("#ReferenceOrderNo").text("");
                $("#divForceFeedQtyDeatil").html("");
                $("#divForceFeedQtyDeatil").hide();
                $("#divOrderList").show();
                $("#OrderNo").val("");
                QueryOrderListView;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                //var errorMessages = XMLHttpRequest.responseText;
                //$message.error(errorMessages);
                DisplayTextMessages(XMLHttpRequest.responseText);
            }
        });
    }

</script>
<fieldset>
    <div class="editor">
        <div class="editor-label-2">
            @Html.LabelFor(model => model.OrderNo)
        </div>
        <div class="editor-field-2">
            <div style="display: none">
                @{
                    Html.RenderAction("_OrderComboBox", "Common", new
                    {
                        controlName = "OrderNo1",
                        canFeed = true,
                        orderType = (int)com.Sconit.CodeMaster.OrderType.Production,
                        isChange = true
                    });
                }
            </div>
            <input id="SearchForceMaterialOrder" value="true" name="SearchForceMaterialOrder"
                type="hidden" />
            <input id="OrderNo_1" name="OrderNo_1" type="hidden" />
            <input id="ReferenceOrderNo_1" name="ReferenceOrderNo_1" type="hidden" />
            @Html.EditorFor(model => model.OrderNo)
        </div>
        <div class="editor-label-2">
            <label>
            </label>
        </div>
        <div class="editor-field-2">
        </div>
        <div class="search-label">
            <label for="OrderMaster_DateFrom">
                @Resources.ORD.OrderMaster.OrderMaster_DateFrom
            </label>
        </div>
        <div class="search-field">
            @(Html.Telerik().DatePicker().Name("DateFrom")
                .Value(System.DateTime.Today.AddDays(-7))
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
        </div>
        <div class="search-label">
            <label for="OrderMaster_DateTo">
                @Resources.ORD.OrderMaster.OrderMaster_DateTo
            </label>
        </div>
        <div class="search-field">
            @(Html.Telerik().DatePicker().Name("DateTo")
                .Value(System.DateTime.Today)
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
        </div>
        <div style="display: none">
            <div class="search-label">
                @Html.LabelFor(model => model.ReferenceOrderNo)
            </div>
            <div class="search-field">
                @Html.EditorFor(model => model.ReferenceOrderNo)
            </div>
        </div>
    </div>
    <div class="editor-footer">
        @Html.Button(Resources.SYS.Global.Button_Search, null, new Dictionary<string, string>()
            {
                {"type", "button"},
                {"id", "btnSearch"},
                {"needconfirm","false"},
                {"onclick","QueryOrderListView()"}
            })
        @Html.Button(Resources.SYS.Global.Button_MaterialIn, null, new Dictionary<string, string>()
            {
                {"type", "button"},
                {"id", "btnMaterialIn"},
                {"needconfirm","true"},
                {"onclick","onSubmit()"},
                {"style","display:none"}
            })
    </div>
</fieldset>
<div id="divOrderList">
</div>
<div id="divForceFeedQtyDeatil">
</div>
