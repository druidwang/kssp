@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.ISS.IssueMaster
@{
    ViewBag.Title = Resources.ISS.IssueMaster.QualityDoor_Title;
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_QualityDoor_New" });
}
<script type="text/javascript">
    function IssueType_Change(e) {
        $("#IssueNoCode").data("tDropDownList").reload();
    }
    function IssueNo_Change(e) {
        var data = {
            issueType: $("#IssueTypeCode").val()
        };
    }
    function IssueNo_DataBinding(e) {
        e.data = {
            issueType: $("#IssueTypeCode").val()
        };
    }

    $(function () {

        $("#IssueAddress-input").change(function () {
            $("#IssueAddress").val($("#IssueAddress-input").val());
        });
    });

    function ProductCode_Change(e) {
        var AssembliesData = {
            controlName: "Assemblies",
            includeBlankOption:true,
            selectedValue:""
        }
        $.ajax({
            type: "post",
            dataType: "html",
            url: "/Common/_AssembliesDropDownList/",
            data: AssembliesData,
            cache: false,
            success: function (data) {
                $("#AssembliesDropDownListDiv").html(data);
            }
        });

        var DefectCodeData = {
            controlName: "DefectCode",
            includeBlankOption: true,
            selectedValue: ""
        }
        $.ajax({
            type: "post",
            dataType: "html",
            url: "/Common/_DefectCodeDropDownList/",
            data: DefectCodeData,
            cache: false,
            success: function (data) {
                $("#DefectCodeDropDownListDiv").html(data);
            }
        });

    }

    function Assemblies_Change() {
        var DefectCodeData = {
            controlName: "DefectCode",
            includeBlankOption: true,
            selectedValue: ""
        }
        $.ajax({
            type: "post",
            dataType: "html",
            url: "/Common/_DefectCodeDropDownList/",
            data: DefectCodeData,
            cache: false,
            success: function (data) {
                $("#DefectCodeDropDownListDiv").html(data);
            }
        });
    }

    function Assemblies_DataBinding(e) {
        e.data = {
            ProductCode: $("#ProductCode").val()
        }
    }

    function DefectCode_DataBinding(e) {
        e.data = {
            Assemblies: $("#Assemblies").val()
        }
    }
</script>
@using (Html.BeginForm())
{
    <fieldset>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.BackYards)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.BackYards)
                @Html.ValidationMessageFor(model => model.BackYards)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common",
        new
        {
            code = com.Sconit.CodeMaster.CodeMaster.IssueStatus,
            controlName = "Status",
            selectedValue = Model != null ? (int)Model.Status : 0,
            enable=false
        });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.FailCode)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_FailCodeComboBox", "Common", new
                {
                    controlName = "FailCode",
                    selectedValue = Model != null ? Model.FailCode : string.Empty
                });
                }
                @Html.ValidationMessageFor(model => model.FailCode)
            </div>
          <div class="editor-label-2">
                <label>
                @Resources.ISS.IssueMaster.ProductCode
                </label>
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_ProductCodeDropDownList", "Common",
            new
            {
                includeBlankOption = true,
                controlName = "ProductCode",
                selectedValue = ViewBag.ProductCode != null ? ViewBag.ProductCode : string.Empty
            });
                }
            </div>
            <div class="editor-label-2">
                <label>
                @Resources.ISS.IssueMaster.Assemblies
                </label>
            </div>
           
            <div class="editor-field-2">
             <div id="AssembliesDropDownListDiv">
                @{
    Html.RenderAction("_AssembliesDropDownList", "Common",
            new
            {
                includeBlankOption = true,
                controlName = "Assemblies",
                selectedValue = ViewBag.Assemblies!=null?ViewBag.Assemblies:""
            });
                }
            </div></div>
            <div class="editor-label-2">

                @Html.LabelFor(model => model.DefectCode)

            </div>
            <div class="editor-field-2">
            <div id="DefectCodeDropDownListDiv">
                @{
    Html.RenderAction("_DefectCodeDropDownList", "Common",
            new
            {
                includeBlankOption = true,
                controlName = "DefectCode",
                selectedValue = Model!=null?Model.DefectCode:string.Empty
            });
                }
                @Html.ValidationMessageFor(model => model.DefectCode)
            </div></div>
            <div class="multilinetext-label-1">

            </div>
            <div class="multilinetext-field-1">

            </div>
            <div class="multilinetext-label-1">
                @Html.LabelFor(model => model.Content)
            </div>
            <div class="multilinetext-field-1">
                @Html.TextAreaFor(model => model.Content, new { rows = 3, style = "min-height:0;width:80%" })
                @Html.ValidationMessageFor(model => model.Content)
            </div>

            <div class="editor-label-2">
            </div>
            <div class="editor-field-2">   
                     @Html.CheckBox("ReleaseIssue", Model != null ? Model.ReleaseIssue : true)@Resources.ISS.IssueMaster.AutomaticRelease
             @Html.CheckBox("ContinuousCreate", Model != null ? Model.ContinuousCreate : true)@Resources.ISS.IssueMaster.ContinuousCreate
          
            </div>
            
        </div>
        <div class="editor-footer">
            <button type="submit" id="btnNew">
                @Resources.SYS.Global.Button_New</button>
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/QualityDoor/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}