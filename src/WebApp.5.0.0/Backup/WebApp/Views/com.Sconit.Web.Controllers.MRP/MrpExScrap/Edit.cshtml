@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.MRP.ORD.MrpExScrap
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_MrpExScrap_View" });
}

@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.MRP.MrpExScrap.MrpExScrap_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CreateUserName)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.LastModifyUserName)
            @Html.HiddenFor(model => model.LastModifyDate)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Flow)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Flow)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Item)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Item)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Item)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ItemDescription)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.EffectDate)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.EffectDate)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Shift)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Shift)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ScrapType)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ScrapTypeDescription)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ScrapQty)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ScrapQty)KG
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsVoid)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.IsVoid)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.OrderNo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.OrderNo)
            </div>
        </div>
        <div class="editor-footer">
            @if (!Model.IsVoid)
            {
                @Html.Button(Resources.SYS.Global.Button_Cancel, "Url_MrpExScrap_Cancel", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnCancel"},
        {"needconfirm","true"},
        {"onclick","location.href='"+@Url.Content("~/MrpExScrap/Cancel/"+@Model.Id)+"'"}
    })
            }
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/MrpExScrap/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
