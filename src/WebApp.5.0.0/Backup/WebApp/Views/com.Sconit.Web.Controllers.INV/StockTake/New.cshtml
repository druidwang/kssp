@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.INV.StockTakeMaster
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Inventory_StockTake_New" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.INV.StockTake.StockTakeMaster_New_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common", new
    {
        code = com.Sconit.CodeMaster.CodeMaster.StockTakeType,
        controlName = "Type",
        selectedValue = Model != null ? ((int)Model.Type).ToString() : string.Empty

    });
                }
                @Html.ValidationMessageFor(model => model.Type)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Region)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_RegionCombobox", "Common", new
    {
        controlName = "Region",
        selectedValue = Model != null ? Model.Region : string.Empty
    });
                }

                @Html.ValidationMessageFor(model => model.Region)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.CostCenter)
            </div>
            <div class="editor-field-2">
                @{
    Html.RenderAction("_CostCenterComboBox", "Common", new
    {
        controlName = "CostCenter",
        selectedValue = Model != null ? Model.CostCenter : null
    });
                }
            </div>
            <div class="editor-label-2">
                @*@Html.LabelFor(model => model.EffectiveDate)*@
            </div>
            <div class="editor-field-2">
                @*@Html.Telerik().DateTimePickerFor(model => model.EffectiveDate).Min(DateTime.Now.AddDays(-30)).Max(DateTime.Now.AddDays(7))*@
                @*@Html.ValidationMessageFor(model => model.EffectiveDate)*@
            </div>
            @* <div class="editor-label-2">
                @Html.LabelFor(model => model.BaseInventoryDate)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().DateTimePickerFor(model => model.BaseInventoryDate)
            </div>*@
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsScanHu)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsScanHu", true)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Remark)
            </div>
            <div class="editor-field-2">
                @Html.TextBoxFor(model => model.Remark)
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_New, "Url_Inventory_StockTake_New", new Dictionary<string, string>()
	            {
	                {"type", "submit"},
	                {"id", "btnNew"},
                    {"needconfirm","true"},
	            })
        </div>
    </fieldset>
}
