@using com.Sconit.Entity.MD;
@model IEnumerable<com.Sconit.Entity.ORD.OrderDetail>
<fieldset>
    <script type="text/javascript">

        function OrderDetailGrid_OnDataBound(e) {
        
            $('input[name="UnitCount"]').unbind("blur");
            $('input[name="UnitCount"]').each(function (a, b) {
                var uc = $(b).val();
                var qty = $(b).parent().next().next().next().next().children("input").val();
                var ucDesc = $(b).parent().next().next().children("input").val();
                if (ucDesc == "") {
                    ucDesc = "包";
                }
                $(b).parent().next().next().children("span").html(Math.ceil(qty / uc) + ucDesc);

                if ($(b).attr("IsChangeUnitCount") == "false") {
                    $(b).parent().replaceWith("<td><lable>" + $(b).val() + "</lable> <input id='UnitCount' key=" + $(b).val() + " name='UnitCount'  type='hidden' /></td>");
                }
                else {
                    //$(b).val("");
                    $(b).blur(function () {
                        if (parseInt($(b).val()) <= 0 || isNaN($(b).val())) {
                            //$(b).val("");
                            $(b).next().html("<span class='field-validation-error' ><span>单包装只能为大于0数字</span></span>");
                        }
                        else {
                            $(b).next().html("");
                        }
                        var uc = $(b).val();
                        var qty = $(b).parent().next().next().next().next().children("input").val();
                        var ucDesc = $(b).parent().next().next().children("input").val();
                        if (ucDesc == "") {
                            ucDesc = "包";
                        }
                        $(b).parent().next().next().html(Math.ceil(qty / uc) + ucDesc);
                    });

                    $(b).focus(function () {
                        $(b).next().html("");
                    });

                }
            });
        }

        function OnHuQtyBlur(e) {
            if (e.value != "") {
                if (parseInt(e.value) < 0 || isNaN(e.value)) {
                    //$(e).val('');
                    $(e).next().html("<span class='field-validation-error' ><span>数量只能为大于0数字</span></span>");
                }
                else {
                    $(e).next().html("");
                }
            }
            var qty = $(e).val();
            if (!isNaN(qty)) {
                var uc = $(e).parent().prev().prev().prev().prev().children("input").val();
                if (uc == "" || uc == undefined) {
                    uc = $(e).parent().prev().prev().prev().prev().children("input").attr("key");
                }
                var ucDesc = $(e).parent().prev().prev().children("input").val();
                if (ucDesc == "") {
                    ucDesc = "包";
                }
                $(e).parent().prev().prev().children("span").html(Math.ceil(qty / uc) + ucDesc);
            }
        }

        function OnHuQtyFocus(e) {
            $(e).next().html("");
        }
    </script>
    <legend>@Resources.INV.Hu.Hu_OrderDetail</legend>
    <div>
        @(Html.Telerik().Grid(Model)
        .Name("OrderDetail")
       .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
                // .Editable(editing => editing.Mode(GridEditMode.InCell))
        .DataBinding(dataBinding => dataBinding.Ajax()
                        .Select("_AjaxOrderDetailList", "Hu", new { orderNo = ViewBag.OrderNo }))
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Hidden().ClientTemplate("<input type='text' style='width:40px;' id='Id'  name='Id' value='<#= Id #>' />").Hidden();
            columns.Bound(o => o.IsChangeUnitCount).ClientTemplate("<input type='text' style='width:40px;' id='IsChangeUnitCount'  name='IsChangeUnitCount' value='<#= IsChangeUnitCount #>' />").Hidden();
            columns.Bound(o => o.Sequence);
            columns.Bound(o => o.Item).ReadOnly(true);
            columns.Bound(o => o.ReferenceItemCode).ReadOnly(true);
            columns.Bound(o => o.ItemDescription).ReadOnly(true);
            columns.Bound(o => o.UnitCount).ClientTemplate("<input type='text' style='width:40px;' id='UnitCount' IsChangeUnitCount='<#= IsChangeUnitCount #>' name='UnitCount' value='<#= UnitCount #>' /><span ></span>").Width(40);
            columns.Bound(o => o.Uom).ReadOnly(true);
            columns.Bound(o => o.UnitCountDescription).ReadOnly(true).ClientTemplate("<input type='hidden' id='UnitCountDescription' name='UnitCountDescription' value='<#= UnitCountDescription #>' /><span><#= UnitCountDescription #><span>");
            columns.Bound(o => o.ManufactureDateStrFormat)
                    .ClientTemplate("<input class='t-input' id='ManufactureDate'  style='width:90px;' name='ManufactureDateStrFormat' type='text' value='<#= ManufactureDateStrFormat #>' />").Width(90); 
            columns.Bound(o => o.HuQty).ClientTemplate("<input type='text' style='width:70px;' id='HuQty' onblur='OnHuQtyBlur(this)' onfocus='OnHuQtyFocus(this)' name='HuQty' value='<#= HuQty #>' /><span ></span>").Width(70);
            //columns.Bound(o => o.SupplierLotNo).ClientTemplate("<input type='text' style='width:80px;' id='SupplierLotNo'  name='SupplierLotNo' value='<#= SupplierLotNo #>' />").Width(100);
        })
                   .ClientEvents(events => events.OnDataBound("OrderDetailGrid_OnDataBound").OnComplete("TelerikGridView_OnComplete"))
        //.Pageable(settings =>
        //{
        //    settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
        //    settings.PageSize(20);
        //})
        .Scrollable(c => c.Enabled(false))
        .Resizable(resizing => resizing.Columns(true))
  )
    </div>
</fieldset>
