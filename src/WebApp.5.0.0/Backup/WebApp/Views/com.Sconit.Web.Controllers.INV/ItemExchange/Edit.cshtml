@using com.Sconit.Web.Models.SearchModels.MD
@model com.Sconit.Entity.INV.ItemExchange
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Inventory_ItemExchange_View" });
}

    <fieldset>
        <legend>@Resources.MD.ItemDiscontinue.ItemDiscontinue_Edit_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemFrom)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.ItemFrom)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ItemTo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model=>model.ItemTo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.RegionFrom)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model=>model.RegionFrom)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.RegionTo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model=>model.RegionTo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LocationFrom)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model=>model.LocationFrom)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LocationTo)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model=>model.LocationTo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateUserName)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.CreateUserName)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.CreateDate)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.CreateDate)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.Uom)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.Uom)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.NewUom)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.NewUom)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.Qty)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.Qty)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.NewQty)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.NewQty)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.OldHu)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.OldHu)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.NewHu)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.NewHu)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.QualityType)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.QualityType)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.EffectiveDate)
            </div>
            <div class="editor-field-2">
               @Html.DisplayFor(model => model.EffectiveDate)
            </div>
        </div>
        <div class="editor-footer">
       @* @if(!Model.IsVoid){
         @Html.Button(Resources.SYS.Global.Button_Cancel, "Url_Inventory_ItemExchange_Cancel", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnCancel"},
        {"needconfirm","true"},
        {"onclick","location.href='"+Url.Content("~/ItemExchange/Cancel/" + Model.Id) +"'"}
	});
    }*@
            
            <button type="button" id="btnBack"  onclick="location.href='@Url.Content("~/ItemExchange/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
