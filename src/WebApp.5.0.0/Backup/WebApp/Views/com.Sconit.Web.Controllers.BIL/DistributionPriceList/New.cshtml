@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.BIL.PriceListMaster
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_DistributionPriceList_View" });
}

@using (Html.BeginForm())
{
  <fieldset>
        <legend>@Resources.BIL.PriceListMaster.PriceListMaster_New_Title</legend>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new { code = com.Sconit.CodeMaster.CodeMaster.PriceListType,
                                                                                     controlName = "Type",enable=false,
                                                                                 selectedValue = Model != null ? (int)Model.Type : 2
                                                                                    
                    });
                }
                @Html.ValidationMessageFor(model => model.Type)
            </div>
            <div class="editor-label-2">
                @Html.LabelForModel(Resources.BIL.PriceListMaster.PriceListMaster_DistributionParty)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CustomerComboBox", "Common",
                        new { controlName = "Party",
                        selectedValue = Model != null ? Model.Party : string.Empty
                    });
                }
                @Html.ValidationMessageFor(model => model.Party, Resources.BIL.PriceListMaster.PriceListMaster_PartyTo)
            </div>
           
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Currency)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_CurrencyDropDownList", "Common", 
                        new { controlName = "Currency",
                              selectedValue = Model != null ? Model.Currency : string.Empty
                        });
                }
                @Html.ValidationMessageFor(model => model.Currency)
            </div>
            @*<div  class="editor-label-2">
                 @Html.LabelFor(model => model.Tax)
            </div>
            <div class="editor-field-2">
               @{
                Html.RenderAction("_TaxDropDownList", "Common",
                    new { controlName = "Tax", includeBlankOption = true,
                          selectedValue = Model != null ? Model.Tax : string.Empty
                    });
                }
            </div>
           <div  class="editor-label-2">
                 @Html.LabelFor(model => model.IsIncludeTax)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsIncludeTax", false)
            </div>*@
            <div  class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsActive", true)
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_New, "Url_DistributionPriceList_Edit", new Dictionary<string, string>()
	        {
	            {"type", "submit"},
	            {"id", "btnNew"},
                {"needconfirm","true"}
	        })
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/DistributionPriceList/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}