@using com.Sconit.Entity.ACC
@using com.Sconit.Web.Models.SearchModels.ORD
@using com.Sconit.Entity.SYS
@using com.Sconit.Entity.ORD
<fieldset>
    @using (Html.BeginForm("DetailList", "DistributionReceipt"))
    {   
        <div class="search">
            <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_ReceiptNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("ReceiptNo", TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).ReceiptNo : string.Empty)
            </div>
             <div class="search-label">
                <label for="ExternalReceiptNo">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_ExternalReceiptNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("ExternalReceiptNo", TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).ExternalReceiptNo : string.Empty)
            </div>
              <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_IpNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("IpNo", TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).IpNo : string.Empty)
            </div>
            <div class="search-label">
                <label for="OrderMaster_Flow">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_Flow
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_FlowComboBox", "Common",
                        new
                        {
                            controlName = "Flow",
                            type = (int)com.Sconit.CodeMaster.OrderType.Distribution,
                            selectedValue = TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).Flow : string.Empty
                        });
                }
            </div>

            <div class="search-label">
                <label for="IpMaster_Status">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_Status
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new
                    {
                        code = com.Sconit.CodeMaster.CodeMaster.ReceiptStatus,
                        controlName = "Status",
                        includeBlankOption = true,
                        selectedValue = TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).Status : null
                    });
                }
            </div>

            <div class="search-label">
                <label for="IpMaster_OrderType">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_OrderType
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new
                    {
                        code = com.Sconit.CodeMaster.CodeMaster.OrderType,
                        controlName = "GoodsReceiptOrderType",
                        orderType = (int)com.Sconit.CodeMaster.OrderType.Distribution,
                        includeBlankOption = true,
                        blankOptionDescription = CodeDetail.SpecialValueEnum.BlankValue,
                        blankOptionValue = "",
                        selectedValue = TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).GoodsReceiptOrderType : 0
                    });
                }
            </div>
             @*<div class="search-label">
                <label for="OrderMaster_Pirority">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_OrderSubType
                </label>
            </div>
            <div class="search-field">
                @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new
                    {
                        code = com.Sconit.CodeMaster.CodeMaster.OrderSubType,
                        controlName = "OrderSubType",
                        selectedValue = TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).OrderSubType : null
                    });
                }
            </div>*@

            <div class="search-label">
                <label for="OrderMaster_PartyFrom">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_PartyFrom
                </label>
            </div>
            <div class="search-field">
                @{
        Html.RenderAction("_OrderMasterPartyFromComboBox", "Common",
            new
            {

                controlName = "PartyFrom",
                orderType = (int)com.Sconit.CodeMaster.OrderType.Distribution,
                selectedValue = TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).PartyFrom : string.Empty
            });
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_PartyTo">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_PartyTo
                </label>
            </div>
            <div class="search-field">
                @{
                 Html.RenderAction("_OrderMasterPartyToComboBox", "Common",
                    new
                    {
                        controlName = "PartyTo",
                        orderType = (int)com.Sconit.CodeMaster.OrderType.Distribution,
                        selectedValue = TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).PartyTo : string.Empty
                    });
                }
            </div>

           
            
            <div class="search-label">
                <label for="OrderMaster_OrderNo">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_Item
                </label>
            </div>
            
            <div class="search-field">
                @{
               Html.RenderAction("_ItemComboBox", "Common",
                   new
                   {
                       controlName = "Item",
                       selectedValue = TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).Item : string.Empty
                   });                    
                }
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                    @Resources.ORD.IpMaster.IpMaster_OrderNo
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("OrderNo", TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).OrderNo : string.Empty)
            </div>
            <div class="editor-label-2">
            </div>
            <div class="editor-field-2">
            </div>
            <div class="editor-label-2">
            </div>
            <div class="editor-field-2">
                @Html.CheckBox("IsReturn", TempData["ReceiptMasterSearchModel"] != null ? (((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).OrderSubType ==1 ? true : false) : false, new { onclick = "doClick(true)" })<span>@Resources.SYS.CodeDetail.CodeDetail_OrderSubType_Return</span><span style="margin: 4px"></span>
                @Html.CheckBox("IsDiff", TempData["ReceiptMasterSearchModel"] != null ? (((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).IpDetailType == 1 ? true : false) : false, new { onclick = "doClick(true)" })@Resources.SYS.CodeDetail.CodeDetail_IpDetailType_Gap
                @Html.Hidden("OrderSubType",  TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).OrderSubType : 0)
                @Html.Hidden("IpDetailType", TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).IpDetailType : 0)
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateFrom">
                    @Resources.ORD.ReceiptMaster.ReceiptMaster_StartDate
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DateTimePicker().Format("yyyy-MM-dd HH:mm").Name("StartDate")
                .Value(TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).StartDate : System.DateTime.Today.AddDays(-7))
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="OrderMaster_DateTo">
                    @Resources.ORD.OrderMaster.OrderMaster_DateTo
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DateTimePicker().Format("yyyy-MM-dd HH:mm").Name("EndDate")
                .Value(TempData["ReceiptMasterSearchModel"] != null ? ((ReceiptMasterSearchModel)TempData["ReceiptMasterSearchModel"]).EndDate : System.DateTime.Today.AddDays(1))
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>

        </div>
        <div class="search-footer">
            @Html.Hidden("isFromList", true)
            <button type="submit" id="btnSearch">
                @Resources.SYS.Global.Button_Search</button>
            <button type="button" id="btnExport" onclick="ExportClick()">导出EXCEL</button>
            <button type="button" id="btnExportPdf">导出PDF</button>
            @*  <button type="submit" id="btnExport" >
                @Resources.SYS.Global.Button_Export</button>*@
        </div>

    }
</fieldset>
<script type="text/javascript">
    function doClick(bl) {
    //debugger
        if ($('#IsReturn').is(":checked")) {
            $('#OrderSubType').attr("value","1")
        }
        else if (!$('#IsReturn').is(":checked")) {
            $('#OrderSubType').attr("value","0")
        }
        if ($('#IsDiff').is(":checked")) {
            $('#IpDetailType').attr("value", "1")
        }
        else if (!$('#IsDiff').is(":checked")) {
            $('#IpDetailType').attr("value", "0")
        }
    }
    function ExportClick() {
        location.href = '/DistributionReceipt/ExportXLS/?ReceiptNo=' + $('#ReceiptNo').val() 
            + '&IpNo=' + $('#IpNo').val() 
            + '&Flow=' + $('#Flow').val() 
            + '&PartyFrom=' + $('#PartyFrom').val()
            + '&PartyTo=' + $('#PartyTo').val()
            + '&Item=' + $('#Item').val()
            + '&ExternalReceiptNo=' + $('#ExternalReceiptNo').val()
            + '&OrderSubType=' + $('#OrderSubType').val()
            + '&IpDetailType=' + $('#IpDetailType').val()
            + '&GoodsReceiptOrderType=' + $('#GoodsReceiptOrderType').val()
            + '&EndDate=' + $('#EndDate').val()
            + '&StartDate=' + $('#StartDate').val()
            + '&Status=' + $('#Status').val()
            + '&OrderNo=' + $('#OrderNo').val();
    }
    var t = "";
    $('#btnSearch').click(function () {

        if (t != "") {
            $('form').attr('action', t);
        }
        $('form').submit();
    });
    $('#btnExportPdf').click(function () {
        if ($('#Flow').val() == "") {
            $message.error('导出PDF时，路线不能为空。');
            return;
        }
        if (t == "") {
            t = $('form').attr('action');
        }
        $('form').attr('action', "/DistributionReceipt/SaveToClientMulti/");
        $('form').submit();
    });

</script>
