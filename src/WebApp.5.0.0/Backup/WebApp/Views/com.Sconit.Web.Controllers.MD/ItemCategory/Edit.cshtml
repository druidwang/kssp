@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.MD.ItemCategory
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_ItemCategory_View" });
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.MD.ItemCategory.ItemCategory_Edit_Title</legend>
        <div class="editor">
            @Html.HiddenFor(model => model.Code)
            @Html.HiddenFor(model => model.ParentCategory)
            @Html.HiddenFor(model => model.CreateUserName)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.LastModifyUserName)
            @Html.HiddenFor(model => model.LastModifyDate)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Code)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.SubCategory)
            </div>
            <div class="editor-field-2">
                @*@Html.Hidden("LevelHidden", Model.SubCategory)
                <select name="Level" id="Level" style="width: 80px">
                    <option value="0">物料类型</option>
                    <option value="5">物料组</option>
                    <option value="1">分类一</option>
                    <option value="2">分类二</option>
                    <option value="3">分类三</option>
                    <option value="4">分类四</option>
                </select>*@
                @{
    Html.RenderAction("_CodeMasterDropDownList", "Common",
        new
        {
            code = com.Sconit.CodeMaster.CodeMaster.SubCategory,
            controlName = "SubCategory",
            selectedValue = Model != null ? (int)Model.SubCategory : 0
        });
                }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.IsActive)
            </div>
        </div>
        <div class="editor-footer">
            @*<button type="submit" id="btnSave">
                @Resources.SYS.Global.Button_Save</button>
            <button type="button" id="btnDelete" onclick="location.href='@Url.Content("~/ItemCategory/Delete/" + @Model.Code)'">
                @Resources.SYS.Global.Button_Delete</button>*@
            @Html.Button(Resources.SYS.Global.Button_Save, "Url_ItemCategory_Edit", new Dictionary<string, string>()
	        {
	            {"type", "submit"},
	            {"id", "btnSave"}
	        })
            @Html.Button(Resources.SYS.Global.Button_Delete, "Url_ItemCategory_Delete", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnDelete"},
                {"needconfirm","true"},
                {"onclick","location.href='"+@Url.Content("~/ItemCategory/Delete/"+@Model.Code)+"'"}
            })
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/ItemCategory/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>
}
