
@model IEnumerable<com.Sconit.Entity.MD.WorkingCalendar>
           
<fieldset>

 <script type="text/javascript">
     function WorkingCalendarGrid_OnDataBinding(e) {
         if (e.sortedColumns.length > 0) {
             if (e.sortedColumns[0].member == "WorkingCalendarTypeDescription") {
                 e.sortedColumns[0].member = "Type";
             } else if (e.sortedColumns[0].member == "WorkingCalendarDayOfWeek") {
                 e.sortedColumns[0].member = "DayOfWeek";
             }
         }
         e.data = {
             Region: $('#WorkingCalendarRegion').val(),
             Flow: $("#WorkingCalendarFlow").val()
//             ,
//             WorkingCalendarTypeDescription: $('#WorkingCalendarTypeDescription').val(),
//             WorkingCalendarDayOfWeek: $('#WorkingCalendarDayOfWeek').val()
         };
     } 
    </script>
    @(Html.Telerik().Grid(Model)
        .Name("WorkingCalendarGrid")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).ClientTemplate(string.Format("<a href=\"javascript:onWorkingCalendarclick('{0}')\">{1}</a>", "<#= Id #>", "<#= Id #>"));
            columns.Bound(o => o.Region);
            columns.Bound(o => o.Flow);
            columns.Bound(o => o.WorkingCalendarTypeDescription);
            columns.Bound(o => o.WorkingCalendarDayOfWeek);
            columns.Bound(o => o.Remarks);
                 })
                .Scrollable(c => c.Enabled(false))
                .EnableCustomBinding(true)
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxList", "WorkingCalendar"))
                        .ClientEvents(events => events.OnDataBinding("WorkingCalendarGrid_OnDataBinding"))
                .Pageable(settings =>
                {
                    settings.Total(ViewBag.Total != null ? ViewBag.Total : 0);
                    settings.PageSize(ViewBag.PageSize);
                    if (ViewBag.Page != null)
                    {
                        settings.PageTo(ViewBag.Page);
                    }
                })
                .Sortable()
                .Resizable(resizing => resizing.Columns(true))
            )
   
</fieldset>

<script type="text/javascript">
    function onWorkingCalendarclick(code) {
        var data = {
            "Id": code
        };
        $.ajax({
            type: "get",
            dataType: "html",
            cache: false,
            url: "/WorkingCalendar/Edit/",
            data: data,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent2 = tabStrip.data("tTabStrip").getContentElement(2);
                $(tabStripContent2).html(data);
            }
        });
    }
</script>
