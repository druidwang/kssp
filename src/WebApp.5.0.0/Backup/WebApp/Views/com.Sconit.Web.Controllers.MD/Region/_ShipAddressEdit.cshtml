@using com.Sconit.Entity.SYS
@using com.Sconit.Entity.MD
@model com.Sconit.Entity.MD.PartyAddress  
@Html.Partial("_AjaxMessage")

    <fieldset>
        <legend>@Resources.MD.Region.Region_Edit_Title </legend>
        <div class="editor">
         @Html.HiddenFor(model => model.Id, new { id="ShipAddressId"})
                @Html.HiddenFor(model => model.Address.Code, new { id = "ShipAddressCode" })
                @Html.HiddenFor(model => model.Address.AddressContent, new { id = "ShipAddressAddressContent" })
                @Html.HiddenFor(model => model.Address.ContactPersonName, new { id = "ShipAddressContactPersonName" })
                @Html.HiddenFor(model => model.Address.Email, new { id = "ShipAddressEmail" })
                @Html.HiddenFor(model => model.Address.MobilePhone, new { id = "ShipAddressMobilePhone" })
                @Html.HiddenFor(model => model.Address.TelPhone, new { id = "ShipAddressTelPhone" })
                @Html.HiddenFor(model => model.Address.Fax, new { id = "ShipAddressFax" })
                 @Html.HiddenFor(model => model.Address.PostCode, new { id = "ShipAddressPostCode" })
                @Html.HiddenFor(model => model.CreateUserName)
                @Html.HiddenFor(model => model.CreateDate)
                @Html.HiddenFor(model => model.LastModifyUserName)
                @Html.HiddenFor(model => model.LastModifyDate)
            

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.Code)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.Code)
            </div>

            @*<div class="editor-field-2">
                @Resources.MD.Address.Address_Code
                @Html.DisplayFor(model => model.Address.Code)
            </div>*@

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.AddressContent)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.AddressContent)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.ContactPersonName)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.ContactPersonName)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.PostCode)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.PostCode)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.Email)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.Email)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.MobilePhone)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.MobilePhone)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.TelPhone)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.TelPhone)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Address.Fax)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Address.Fax)
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.Sequence)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.Sequence).DecimalDigits(0).MinValue(0).InputHtmlAttributes(new { id = "ShipAddressSequence" })
            </div>

            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsPrimary)
            </div>
            <div class="editor-field-2">
                @Html.CheckBoxFor(model => model.IsPrimary, new { id = "ShipAddressIsPrimary" })
            </div>

@*            <div class="editor-field-2">
                @Resources.MD.Region.Region_IsPrimary
                @Html.CheckBox("IsPrimary", TempData["PartyAddress"] != null ? ((PartyAddress)TempData["PartyAddress"]).IsPrimary : true)
            </div>*@
        </div>
        <div class="editor-footer">
            <button type="button" id="btnSave_ShipAddress" onclick="btnSave_ShipAddress_Click()">
                @Resources.SYS.Global.Button_Save</button>
                @Html.Button(Resources.SYS.Global.Button_Delete, "Url_Region_Delete", new Dictionary<string, string>()
	                {
	                    {"type", "button"},
	                    {"id", "btnDelete_ShipAddress"},
                        {"needconfirm","true"},
                        {"onclick","btnDelete_ShipAddress_Click()"}
	                })
            @*<button type="button" id="btnDelete_ShipAddress" onclick="btnDelete_ShipAddress_Click()">
                @Resources.SYS.Global.Button_Delete</button>*@
            <button type="button" id="btnBack_ShipAddress" onclick="btnBack_ShipAddress_Click()">
                @Resources.SYS.Global.Button_Back</button>
        </div>
    </fieldset>

<script language="javascript" type="text/javascript">
    function btnDelete_ShipAddress_Click() {
        var data = {
            "Id": $("#ShipAddressId").val(),
            "PartyCode": $("#PartyCode").val()
        };
        $.ajax({
            type: "post",
            dataType: "html",
            url: "/region/DeleteShipAddress/",
            data: data,
            cache:false,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent2 = tabStrip.data("tTabStrip").getContentElement(2);
                $(tabStripContent2).html(data);
            }
        });
    }
    function btnSave_ShipAddress_Click() {
        var data = {
            "PartyCode": $("#PartyCode").val(),
            "Id": $("#ShipAddressId").val(),
            "Address.Code": $("#ShipAddressCode").val(),
            "Address.AddressContent": $("#ShipAddressAddressContent").val(),
            "Address.PostCode": $("#ShipAddressPostCode").val(),
            "Address.MobilePhone": $("#ShipAddressMobilePhone").val(),
            "Address.TelPhone": $("#ShipAddressTelPhone").val(),
            "Address.ContactPersonName": $("#ShipAddressContactPersonName").val(),
            "Address.Email": $("#ShipAddressEmail").val(),
            "Address.Fax": $("#ShipAddressFax").val(),
            "Sequence": $("#ShipAddressSequence").val(),
            "Type": "0",
            "IsPrimary": $("#ShipAddressIsPrimary").is(':checked')

        };
        $.ajax({
            type: "post",
            dataType: "html",
            url: "/region/_ShipAddressEdit/",
            data: data,
            cache:false,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent2 = tabStrip.data("tTabStrip").getContentElement(2);
                $(tabStripContent2).html(data);
            }
        });
    }

    function btnBack_ShipAddress_Click() {
        var data = {
            "PartyCode": $("#PartyCode").val()
        };
        $.ajax({
            type: "get",
            dataType: "html",
            url: "/region/_ShipAddressList/",
            data: data,
            cache:false,
            success: function (data, textStatus) {
                var tabStrip = $("#TabStrip");
                var tabStripContent2 = tabStrip.data("tTabStrip").getContentElement(2);
                $(tabStripContent2).html(data);
            }
        });
    }
</script>