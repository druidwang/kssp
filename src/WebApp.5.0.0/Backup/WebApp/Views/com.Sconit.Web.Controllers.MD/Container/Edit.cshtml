@using com.Sconit.Entity.SYS
@model com.Sconit.Entity.MD.Container
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_Container_View" });
}

@using (Html.BeginForm())
{
    <fieldset>
        <legend>@Resources.MD.Container.Container_Edit_Title</legend>
            <div class="editor">
                @Html.HiddenFor(model => model.Code)
                @Html.HiddenFor(model => model.CreateUserName)
                @Html.HiddenFor(model => model.CreateDate)
                @Html.HiddenFor(model => model.LastModifyUserName)
                @Html.HiddenFor(model => model.LastModifyDate)
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="editor-field-2">
                @Html.DisplayFor(model => model.Code)
            </div>
            <div class="editor-label-2">
               @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
             <div class="editor-label-2">
                @Html.LabelFor(model => model.InventoryType)
            </div>
            <div class="editor-field-2">
                @{
           Html.RenderAction("_CodeMasterDropDownList", "Common", new
           {
               code = com.Sconit.CodeMaster.CodeMaster.InventoryType,
               controlName = "InventoryType",
               selectedValue = (int)Model.InventoryType
           });
                }
                @Html.ValidationMessageFor(model => model.InventoryType)
            </div>
              <div class="editor-label-2">
            @Html.LabelFor(model => model.Qty)
        </div>
        <div class="editor-field-2">
            @Html.Telerik().NumericTextBoxFor(model => model.Qty).DecimalDigits(2).MinValue(0)
        </div>
            <div class="editor-label-2">
               @Html.LabelFor(model => model.IsActive)
            </div>
            <div class="editor-field-2">
                @Html.EditorFor(model => model.IsActive)
            </div>
        </div>
        <div class="editor-footer">
            @*<button type="submit" id="btnSave">
                @Resources.SYS.Global.Button_Save</button>
            <button type="button" id="btnDelete" onclick="location.href='@Url.Content("~/Container/Delete/" + @Model.Code)'">
                @Resources.SYS.Global.Button_Delete</button>*@
                @Html.Button(Resources.SYS.Global.Button_Save, "Url_Container_Edit", new Dictionary<string, string>()
	{
	    {"type", "submit"},
	    {"id", "btnSave"}
	})
            @Html.Button(Resources.SYS.Global.Button_Delete, "Url_Container_Delete", new Dictionary<string, string>()
	{
	    {"type", "button"},
	    {"id", "btnDelete"},
        {"needconfirm","true"},
        {"onclick","location.href='"+@Url.Content("~/Container/Delete/"+@Model.Code)+"'"}
    })
            <button type="button" id="btnBack" onclick="location.href='@Url.Content("~/Container/List")'">
                @Resources.SYS.Global.Button_Back</button>
        </div>

      
    </fieldset>
}


