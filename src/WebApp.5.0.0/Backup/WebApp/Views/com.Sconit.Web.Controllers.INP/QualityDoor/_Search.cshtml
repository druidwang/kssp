@using com.Sconit.Entity.SYS
@using com.Sconit.Web.Models.SearchModels.ISS
<fieldset>
    @using (Html.BeginForm("List", "QualityDoor"))
    {   
        <div class="search">
            <div class="search-label">
                <label for="Code">
                    @Resources.ISS.IssueMaster.Code
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("Code", TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).Code : string.Empty)
            </div>
			<div class="search-label">
                <label for="IssueSubject">
                    @Resources.ISS.IssueMaster.IssueSubject
                </label>
            </div>

            <div class="search-field">
                @Html.TextBox("IssueSubject", TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).IssueSubject : string.Empty)
            </div>
			<div class="search-label">
                <label for="BackYards">
                    @Resources.ISS.IssueMaster.BackYards
                </label>
            </div>
            <div class="search-field">
                @Html.TextBox("BackYards", TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).BackYards : string.Empty)
            </div>

			 <div class="search-label">
                <label for="Status">
                    @Resources.ISS.IssueMaster.Status
                </label>
            </div>
            <div class="search-field">
                 @{
                    Html.RenderAction("_CodeMasterDropDownList", "Common", new
                    {
                        code = com.Sconit.CodeMaster.CodeMaster.IssueStatus,
                        controlName = "Status",
                        includeBlankOption = true,
                        blankOptionDescription = CodeDetail.SpecialValueEnum.BlankValue,
                        blankOptionValue = "",
                        selectedValue = TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).Status : null
                    });
                }
            </div>
		
             <div class="search-label">
                <label for="DateFrom">
                    @Resources.ISS.IssueMaster.FailCode
                </label>
            </div>
            <div class="search-field">
              @* @Html.TextBox("FailCode", TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).FailCode : string.Empty)*@
               @{
        Html.RenderAction("_FailCodeComboBox", "Common", new
                    {
                        controlName = "FailCode",
                        selectedValue = TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).FailCode : string.Empty
                    });
                }
            </div>
            <div class="search-label">
                <label for="DateTo">
                    @Resources.ISS.IssueMaster.DefectCode
                </label>
            </div>
            <div class="search-field">
               @*@Html.TextBox("DefectCode", TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).DefectCode : string.Empty)*@
               @{
        Html.RenderAction("_DefectCodeComboBox", "Common", new
                    {
                        controlName = "DefectCode",
                        selectedValue = TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).DefectCode : string.Empty
                    });
                }
            </div>


			<div class="search-label">
                <label for="DateFrom">
                    @Resources.ISS.IssueMaster.DateFrom
                </label>
            </div>
            <div class="search-field">
                @(Html.Telerik().DatePicker().Name("DateFrom")
.Value(TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).DateFrom : System.DateTime.Today.AddDays(-7))
                .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>
            <div class="search-label">
                <label for="DateTo">
                    @Resources.ISS.IssueMaster.DateTo
                </label>
            </div>
            <div class="search-field">
               @(Html.Telerik().DatePicker().Name("DateTo")
            .Value(TempData["IssueMasterSearchModel"] != null ? ((IssueMasterSearchModel)TempData["IssueMasterSearchModel"]).DateTo : System.DateTime.Today.AddDays(1))
               .HtmlAttributes(new { style = "margin-bottom: 1.3em;width:200px" }))
            </div>

          
            
        </div>    
        <div class="search-footer">
            <button type="submit" id="btnSearch">
                @Resources.SYS.Global.Button_Search</button>
			
        </div>
    }
</fieldset>
